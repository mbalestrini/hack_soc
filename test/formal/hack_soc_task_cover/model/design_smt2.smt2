; SMT-LIBv2 description generated by Yosys 0.9+3833 (git sha1 b0004911, clang 6.0.0-1ubuntu2 -fPIC -Os)
; yosys-smt2-module $paramod/dmux8way/D_WIDTH=1
(declare-sort |$paramod/dmux8way/D_WIDTH=1_s| 0)
(declare-fun |$paramod/dmux8way/D_WIDTH=1_is| (|$paramod/dmux8way/D_WIDTH=1_s|) Bool)
(declare-fun |$paramod/dmux8way/D_WIDTH=1#0| (|$paramod/dmux8way/D_WIDTH=1_s|) (_ BitVec 3)) ; \sel
; yosys-smt2-input sel 3
; yosys-smt2-wire sel 3
(define-fun |$paramod/dmux8way/D_WIDTH=1_n sel| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 3) (|$paramod/dmux8way/D_WIDTH=1#0| state))
(declare-fun |$paramod/dmux8way/D_WIDTH=1#1| (|$paramod/dmux8way/D_WIDTH=1_s|) Bool) ; \in
; yosys-smt2-input in 1
; yosys-smt2-wire in 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n in| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (|$paramod/dmux8way/D_WIDTH=1#1| state))
(define-fun |$paramod/dmux8way/D_WIDTH=1#2| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b111)) ; $eq$dmux8way.v:24$189_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#3| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#2| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \h
; yosys-smt2-output h 1
; yosys-smt2-wire h 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n h| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#3| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#4| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b110)) ; $eq$dmux8way.v:23$186_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#5| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#4| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \g
; yosys-smt2-output g 1
; yosys-smt2-wire g 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n g| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#5| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#6| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b101)) ; $eq$dmux8way.v:22$183_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#7| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#6| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \f
; yosys-smt2-output f 1
; yosys-smt2-wire f 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n f| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#7| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#8| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b100)) ; $eq$dmux8way.v:21$180_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#9| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#8| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \e
; yosys-smt2-output e 1
; yosys-smt2-wire e 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n e| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#9| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#10| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b011)) ; $eq$dmux8way.v:20$177_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#11| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#10| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \d
; yosys-smt2-output d 1
; yosys-smt2-wire d 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n d| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#11| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#12| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b010)) ; $eq$dmux8way.v:19$174_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#13| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#12| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \c
; yosys-smt2-output c 1
; yosys-smt2-wire c 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n c| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#13| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#14| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= (|$paramod/dmux8way/D_WIDTH=1#0| state) #b001)) ; $eq$dmux8way.v:18$171_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#15| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#14| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \b
; yosys-smt2-output b 1
; yosys-smt2-wire b 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n b| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#15| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1#16| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (not (or  (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#0| state)) #b1) (= ((_ extract 1 1) (|$paramod/dmux8way/D_WIDTH=1#0| state)) #b1) (= ((_ extract 2 2) (|$paramod/dmux8way/D_WIDTH=1#0| state)) #b1)))) ; $eq$dmux8way.v:17$168_Y
(define-fun |$paramod/dmux8way/D_WIDTH=1#17| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) (_ BitVec 1) (ite (|$paramod/dmux8way/D_WIDTH=1#16| state) (ite (|$paramod/dmux8way/D_WIDTH=1#1| state) #b1 #b0) #b0)) ; \a
; yosys-smt2-output a 1
; yosys-smt2-wire a 1
(define-fun |$paramod/dmux8way/D_WIDTH=1_n a| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool (= ((_ extract 0 0) (|$paramod/dmux8way/D_WIDTH=1#17| state)) #b1))
(define-fun |$paramod/dmux8way/D_WIDTH=1_a| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool true)
(define-fun |$paramod/dmux8way/D_WIDTH=1_u| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool true)
(define-fun |$paramod/dmux8way/D_WIDTH=1_i| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool true)
(define-fun |$paramod/dmux8way/D_WIDTH=1_h| ((state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool true)
(define-fun |$paramod/dmux8way/D_WIDTH=1_t| ((state |$paramod/dmux8way/D_WIDTH=1_s|) (next_state |$paramod/dmux8way/D_WIDTH=1_s|)) Bool true) ; end of module $paramod/dmux8way/D_WIDTH=1
; yosys-smt2-module $paramod/hack_alu/D_WIDTH=16
(declare-sort |$paramod/hack_alu/D_WIDTH=16_s| 0)
(declare-fun |$paramod/hack_alu/D_WIDTH=16_is| (|$paramod/hack_alu/D_WIDTH=16_s|) Bool)
(declare-fun |$paramod/hack_alu/D_WIDTH=16#0| (|$paramod/hack_alu/D_WIDTH=16_s|) Bool) ; \zy
; yosys-smt2-input zy 1
; yosys-smt2-wire zy 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n zy| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (|$paramod/hack_alu/D_WIDTH=16#0| state))
(declare-fun |$paramod/hack_alu/D_WIDTH=16#1| (|$paramod/hack_alu/D_WIDTH=16_s|) Bool) ; \zx
; yosys-smt2-input zx 1
; yosys-smt2-wire zx 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n zx| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (|$paramod/hack_alu/D_WIDTH=16#1| state))
(declare-fun |$paramod/hack_alu/D_WIDTH=16#2| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 16)) ; \x
(define-fun |$paramod/hack_alu/D_WIDTH=16#3| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (|$paramod/hack_alu/D_WIDTH=16#1| state) #b0000000000000000 (|$paramod/hack_alu/D_WIDTH=16#2| state))) ; \vzx
(define-fun |$paramod/hack_alu/D_WIDTH=16#4| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (bvnot (|$paramod/hack_alu/D_WIDTH=16#3| state))) ; $not$hack_alu.v:18$196_Y
(declare-fun |$paramod/hack_alu/D_WIDTH=16#5| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 1)) ; \nx
(define-fun |$paramod/hack_alu/D_WIDTH=16#6| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#5| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16#4| state) (|$paramod/hack_alu/D_WIDTH=16#3| state))) ; \vnx
(declare-fun |$paramod/hack_alu/D_WIDTH=16#7| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 16)) ; \y
(define-fun |$paramod/hack_alu/D_WIDTH=16#8| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (|$paramod/hack_alu/D_WIDTH=16#0| state) #b0000000000000000 (|$paramod/hack_alu/D_WIDTH=16#7| state))) ; \vzy
(define-fun |$paramod/hack_alu/D_WIDTH=16#9| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (bvnot (|$paramod/hack_alu/D_WIDTH=16#8| state))) ; $not$hack_alu.v:21$202_Y
(declare-fun |$paramod/hack_alu/D_WIDTH=16#10| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 1)) ; \ny
(define-fun |$paramod/hack_alu/D_WIDTH=16#11| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#10| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16#9| state) (|$paramod/hack_alu/D_WIDTH=16#8| state))) ; \vny
(define-fun |$paramod/hack_alu/D_WIDTH=16#12| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (bvand (|$paramod/hack_alu/D_WIDTH=16#6| state) (|$paramod/hack_alu/D_WIDTH=16#11| state))) ; $and$hack_alu.v:23$206_Y
(define-fun |$paramod/hack_alu/D_WIDTH=16#13| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (bvadd (|$paramod/hack_alu/D_WIDTH=16#6| state) (|$paramod/hack_alu/D_WIDTH=16#11| state))) ; $add$hack_alu.v:23$205_Y
(declare-fun |$paramod/hack_alu/D_WIDTH=16#14| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 1)) ; \f
(define-fun |$paramod/hack_alu/D_WIDTH=16#15| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#14| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16#13| state) (|$paramod/hack_alu/D_WIDTH=16#12| state))) ; \vf
(define-fun |$paramod/hack_alu/D_WIDTH=16#16| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (bvnot (|$paramod/hack_alu/D_WIDTH=16#15| state))) ; $not$hack_alu.v:24$209_Y
(declare-fun |$paramod/hack_alu/D_WIDTH=16#17| (|$paramod/hack_alu/D_WIDTH=16_s|) (_ BitVec 1)) ; \no
(define-fun |$paramod/hack_alu/D_WIDTH=16#18| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#17| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16#16| state) (|$paramod/hack_alu/D_WIDTH=16#15| state))) ; \out
(define-fun |$paramod/hack_alu/D_WIDTH=16#19| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (distinct (|$paramod/hack_alu/D_WIDTH=16#18| state) #b0000000000000000)) ; $reduce_or$hack_alu.v:26$211_Y
(define-fun |$paramod/hack_alu/D_WIDTH=16#20| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 1) (bvnot (ite (|$paramod/hack_alu/D_WIDTH=16#19| state) #b1 #b0))) ; \zr
; yosys-smt2-output zr 1
; yosys-smt2-wire zr 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n zr| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#20| state)) #b1))
; yosys-smt2-input y 16
; yosys-smt2-wire y 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n y| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#7| state))
; yosys-smt2-input x 16
; yosys-smt2-wire x 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n x| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#2| state))
; yosys-smt2-wire vzy 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n vzy| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#8| state))
; yosys-smt2-wire vzx 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n vzx| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#3| state))
; yosys-smt2-wire vny 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n vny| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#11| state))
; yosys-smt2-wire vnx 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n vnx| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#6| state))
; yosys-smt2-wire vf 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n vf| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#15| state))
; yosys-smt2-output out 16
; yosys-smt2-wire out 16
(define-fun |$paramod/hack_alu/D_WIDTH=16_n out| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/hack_alu/D_WIDTH=16#18| state))
; yosys-smt2-input ny 1
; yosys-smt2-wire ny 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n ny| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#10| state)) #b1))
; yosys-smt2-input nx 1
; yosys-smt2-wire nx 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n nx| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#5| state)) #b1))
; yosys-smt2-input no 1
; yosys-smt2-wire no 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n no| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#17| state)) #b1))
; yosys-smt2-output ng 1
; yosys-smt2-wire ng 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n ng| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 15 15) (|$paramod/hack_alu/D_WIDTH=16#18| state)) #b1))
; yosys-smt2-input f 1
; yosys-smt2-wire f 1
(define-fun |$paramod/hack_alu/D_WIDTH=16_n f| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/hack_alu/D_WIDTH=16#14| state)) #b1))
(define-fun |$paramod/hack_alu/D_WIDTH=16_a| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/hack_alu/D_WIDTH=16_u| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/hack_alu/D_WIDTH=16_i| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/hack_alu/D_WIDTH=16_h| ((state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/hack_alu/D_WIDTH=16_t| ((state |$paramod/hack_alu/D_WIDTH=16_s|) (next_state |$paramod/hack_alu/D_WIDTH=16_s|)) Bool true) ; end of module $paramod/hack_alu/D_WIDTH=16
; yosys-smt2-module $paramod/register/D_WIDTH=16
(declare-sort |$paramod/register/D_WIDTH=16_s| 0)
(declare-fun |$paramod/register/D_WIDTH=16_is| (|$paramod/register/D_WIDTH=16_s|) Bool)
(declare-fun |$paramod/register/D_WIDTH=16#0| (|$paramod/register/D_WIDTH=16_s|) (_ BitVec 16)) ; \data
; yosys-smt2-output out 16
; yosys-smt2-wire out 16
(define-fun |$paramod/register/D_WIDTH=16_n out| ((state |$paramod/register/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/register/D_WIDTH=16#0| state))
(declare-fun |$paramod/register/D_WIDTH=16#1| (|$paramod/register/D_WIDTH=16_s|) Bool) ; \load
; yosys-smt2-input load 1
; yosys-smt2-wire load 1
(define-fun |$paramod/register/D_WIDTH=16_n load| ((state |$paramod/register/D_WIDTH=16_s|)) Bool (|$paramod/register/D_WIDTH=16#1| state))
(declare-fun |$paramod/register/D_WIDTH=16#2| (|$paramod/register/D_WIDTH=16_s|) (_ BitVec 16)) ; \in
; yosys-smt2-input in 16
; yosys-smt2-wire in 16
(define-fun |$paramod/register/D_WIDTH=16_n in| ((state |$paramod/register/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/register/D_WIDTH=16#2| state))
; yosys-smt2-register data 16
; yosys-smt2-wire data 16
(define-fun |$paramod/register/D_WIDTH=16_n data| ((state |$paramod/register/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/register/D_WIDTH=16#0| state))
(declare-fun |$paramod/register/D_WIDTH=16#3| (|$paramod/register/D_WIDTH=16_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |$paramod/register/D_WIDTH=16_n clk| ((state |$paramod/register/D_WIDTH=16_s|)) Bool (|$paramod/register/D_WIDTH=16#3| state))
(define-fun |$paramod/register/D_WIDTH=16#4| ((state |$paramod/register/D_WIDTH=16_s|)) (_ BitVec 16) (ite (|$paramod/register/D_WIDTH=16#1| state) (|$paramod/register/D_WIDTH=16#2| state) (|$paramod/register/D_WIDTH=16#0| state))) ; $auto$rtlil.cc:2218:Mux$979
(define-fun |$paramod/register/D_WIDTH=16_a| ((state |$paramod/register/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/register/D_WIDTH=16_u| ((state |$paramod/register/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/register/D_WIDTH=16_i| ((state |$paramod/register/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/register/D_WIDTH=16_h| ((state |$paramod/register/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/register/D_WIDTH=16_t| ((state |$paramod/register/D_WIDTH=16_s|) (next_state |$paramod/register/D_WIDTH=16_s|)) Bool 
  (= (|$paramod/register/D_WIDTH=16#4| state) (|$paramod/register/D_WIDTH=16#0| next_state)) ; $auto$opt_dff.cc:764:run$718 \data
) ; end of module $paramod/register/D_WIDTH=16
; yosys-smt2-module $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15
(declare-sort |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s| 0)
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_is| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool)
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \writing
; yosys-smt2-register writing 1
; yosys-smt2-wire writing 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n writing| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state)) #b1))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \rom_request
; yosys-smt2-output rom_request 1
; yosys-smt2-register rom_request 1
; yosys-smt2-wire rom_request 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_request| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \rom_busy
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#3| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (not (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) false))) ; $logic_not$rom_stream_loader.v:35$127_Y
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#4| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \rom_initialized
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#5| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#3| state) false) (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#4| state) false))) ; \rom_receive_ready
; yosys-smt2-wire rom_receive_ready 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_receive_ready| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#5| state))
; yosys-smt2-input rom_initialized 1
; yosys-smt2-wire rom_initialized 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_initialized| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#4| state))
; yosys-smt2-input rom_busy 1
; yosys-smt2-wire rom_busy 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_busy| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n reset| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#7| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 16)) ; \output_data
; yosys-smt2-output output_data 16
; yosys-smt2-register output_data 16
; yosys-smt2-wire output_data 16
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n output_data| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#7| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 15)) ; \current_address
; yosys-smt2-output output_address 15
; yosys-smt2-wire output_address 15
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n output_address| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#9| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \load_recevied
; yosys-smt2-output load_recevied 1
; yosys-smt2-register load_recevied 1
; yosys-smt2-wire load_recevied 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n load_recevied| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#9| state)) #b1))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#10| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \load
; yosys-smt2-input load 1
; yosys-smt2-wire load 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n load| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#10| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#11| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 16)) ; \input_data
; yosys-smt2-input input_data 16
; yosys-smt2-wire input_data 16
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n input_data| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#11| state))
; yosys-smt2-register current_address 15
; yosys-smt2-wire current_address 15
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n current_address| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#12| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n clk| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#12| state))
(declare-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#13| (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \ack
; yosys-smt2-output ack 1
; yosys-smt2-register ack 1
; yosys-smt2-wire ack 1
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n ack| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#13| state)) #b1))
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#14| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) #b0 #b1)) ; $procmux$250_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#15| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state))) ; $auto$rtlil.cc:2121:Not$736
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#16| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#15| state)) #b1))) ; $auto$opt_dff.cc:276:combine_resets$745
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#17| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#16| state) #b0 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#14| state))) ; $auto$rtlil.cc:2218:Mux$975
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#18| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#10| state) false) (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#5| state) false))) ; $logic_and$rom_stream_loader.v:64$132_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#19| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#18| state) #b1 #b0)) ; $procmux$238_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#20| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state)) #b1) #b0 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#19| state))) ; $procmux$241_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#21| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1))) ; $auto$opt_dff.cc:276:combine_resets$740
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#22| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#21| state) #b0 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#20| state))) ; $auto$rtlil.cc:2218:Mux$977
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#23| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (bvadd (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| state) #b000000000000001)) ; $add$rom_stream_loader.v:62$131_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#24| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state))) ; $auto$rtlil.cc:2121:Not$721
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#25| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) #b1 #b0))) ; $auto$rtlil.cc:2121:Not$723
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#26| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#24| state)) #b1) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#25| state)) #b1) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$724
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#27| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#26| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#23| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| state))) ; $auto$rtlil.cc:2218:Mux$969
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#28| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) #b000000000000000 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#27| state))) ; $auto$rtlil.cc:2218:Mux$971
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#29| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) #b1 #b0))) ; $auto$rtlil.cc:2121:Not$732
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#30| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#29| state)) #b1) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#24| state)) #b1) (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#15| state)) #b1) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#18| state))) ; $auto$opt_dff.cc:242:make_patterns_logic$737
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#31| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#30| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#11| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#7| state))) ; $auto$rtlil.cc:2218:Mux$963
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#32| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#14| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#20| state))) ; $procmux$303_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#33| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) #b0 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#32| state))) ; $auto$rtlil.cc:2218:Mux$973
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#34| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) #b1 #b0)) ; $procmux$272_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#35| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state)) #b1) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#34| state) #b0)) ; $procmux$274_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#36| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) #b1 #b0)) ; $procmux$277_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#37| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#36| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#35| state))) ; $procmux$279_Y
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#38| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#2| state) #b1 #b0) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b01)) ; $auto$opt_dff.cc:217:make_patterns_logic$728
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#39| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#38| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#37| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| state))) ; $auto$rtlil.cc:2218:Mux$965
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#40| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#6| state) #b0 (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#39| state))) ; $auto$rtlil.cc:2218:Mux$967
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_a| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_u| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_i| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_h| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_t| ((state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|) (next_state |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#17| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#13| next_state)) ; $auto$opt_dff.cc:702:run$747 \ack
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#22| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#9| next_state)) ; $auto$opt_dff.cc:702:run$742 \load_recevied
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#8| next_state)) ; $auto$opt_dff.cc:764:run$726 \current_address
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#31| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#7| next_state)) ; $auto$opt_dff.cc:764:run$739 \output_data
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#33| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#1| next_state)) ; $auto$opt_dff.cc:702:run$748 \rom_request
  (= (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15#0| next_state)) ; $auto$opt_dff.cc:764:run$730 \writing
)) ; end of module $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15
; yosys-smt2-module $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15
(declare-sort |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s| 0)
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_is| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool)
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#0| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \write_enable
; yosys-smt2-input write_enable 1
; yosys-smt2-wire write_enable 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n write_enable| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#0| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#1| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \sram_sio_oe
; yosys-smt2-output sram_sio_oe 1
; yosys-smt2-register sram_sio_oe 1
; yosys-smt2-wire sram_sio_oe 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio_oe| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#1| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 3)) ; \output_buffer [23:21]
; yosys-smt2-output sram_sio3_o 1
; yosys-smt2-wire sram_sio3_o 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_o| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 2 2) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#3| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \sram_sio3_i
; yosys-smt2-input sram_sio3_i 1
; yosys-smt2-wire sram_sio3_i 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#3| state))
; yosys-smt2-output sram_sio2_o 1
; yosys-smt2-wire sram_sio2_o 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_o| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 1 1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#4| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \sram_sio2_i
; yosys-smt2-input sram_sio2_i 1
; yosys-smt2-wire sram_sio2_i 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#4| state))
; yosys-smt2-output sram_sio1_o 1
; yosys-smt2-wire sram_sio1_o 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_o| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#5| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \sram_sio1_i
; yosys-smt2-input sram_sio1_i 1
; yosys-smt2-wire sram_sio1_i 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#5| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \output_buffer [20]
; yosys-smt2-output sram_sio0_o 1
; yosys-smt2-wire sram_sio0_o 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_o| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#7| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \sram_sio0_i
; yosys-smt2-input sram_sio0_i 1
; yosys-smt2-wire sram_sio0_i 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#7| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \sram_sck
; yosys-smt2-output sram_sck 1
; yosys-smt2-register sram_sck 1
; yosys-smt2-wire sram_sck 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sck| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#9| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \sram_cs_n
; yosys-smt2-output sram_cs_n 1
; yosys-smt2-register sram_cs_n 1
; yosys-smt2-wire sram_cs_n 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_cs_n| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#9| state)) #b1))
; yosys-smt2-wire sio_o 4
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sio_o| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 4) (concat (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| state)))
; yosys-smt2-wire sio_i 4
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sio_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 4) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#3| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#4| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#5| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#7| state) #b1 #b0)))))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n reset| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \request_write
; yosys-smt2-register request_write 1
; yosys-smt2-wire request_write 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request_write| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 16)) ; \request_data_out
; yosys-smt2-register request_data_out 16
; yosys-smt2-wire request_data_out 16
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request_data_out| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#13| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 15)) ; \request_address
; yosys-smt2-register request_address 15
; yosys-smt2-wire request_address 15
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request_address| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#13| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#14| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \request
; yosys-smt2-input request 1
; yosys-smt2-wire request 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#14| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 20)) ; \output_buffer [19:0]
; yosys-smt2-register output_buffer 24
; yosys-smt2-wire output_buffer 24
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n output_buffer| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 24) (concat (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state) (concat (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state))))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 5)) ; \output_bits_left
; yosys-smt2-register output_bits_left 5
; yosys-smt2-wire output_bits_left 5
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n output_bits_left| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 16)) ; \input_buffer
; yosys-smt2-register input_buffer 16
; yosys-smt2-wire input_buffer 16
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n input_buffer| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 5)) ; \input_bits_left
; yosys-smt2-register input_bits_left 5
; yosys-smt2-wire input_bits_left 5
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n input_bits_left| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 5)) ; \initializing_step
; yosys-smt2-register initializing_step 5
; yosys-smt2-wire initializing_step 5
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n initializing_step| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#20| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 1)) ; \initialized
; yosys-smt2-output initialized 1
; yosys-smt2-register initialized 1
; yosys-smt2-wire initialized 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n initialized| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#20| state)) #b1))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#21| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 16)) ; \data_out
; yosys-smt2-input data_out 16
; yosys-smt2-wire data_out 16
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_out| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#21| state))
; yosys-smt2-output data_in 16
; yosys-smt2-wire data_in 16
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_in| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 3)) ; \current_state
; yosys-smt2-register current_state 3
; yosys-smt2-wire current_state 3
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n current_state| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#23| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n clk| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#23| state))
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#24| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b000)) ; \busy
; yosys-smt2-output busy 1
; yosys-smt2-wire busy 1
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n busy| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#24| state))
(declare-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#25| (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (_ BitVec 15)) ; \address
; yosys-smt2-input address 15
; yosys-smt2-wire address 15
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n address| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#25| state))
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| state) #b00100)) ; $eq$spi_sram_encoder.v:276$125_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#27| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| state) #b000 #b000)) ; $procmux$503_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| state) #b00100)) ; $eq$spi_sram_encoder.v:214$116_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#29| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b000 #b000)) ; $procmux$508_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#30| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) #b1 #b0)) ; $auto$wreduce.cc:454:run$688 [0]
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#31| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (concat #b10 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#30| state)) #b000)) ; $procmux$515_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#32| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b011 #b000)) ; $procmux$519_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#33| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (not (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#24| state) false))) ; $logic_not$spi_sram_encoder.v:179$114_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#34| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#14| state) false) (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#33| state) false))) ; $logic_and$spi_sram_encoder.v:179$115_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#35| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#34| state) #b001 #b000)) ; $procmux$523_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#36| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b01000)) ; $procmux$527_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#37| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#36| state) #b000 #b000)) ; $procmux$526_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b100)) ; $procmux$399_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b101)) ; $procmux$313_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b011)) ; $procmux$320_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b010)) ; $procmux$324_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b001)) ; $procmux$327_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (not (or  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state)) #b1) (= ((_ extract 1 1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state)) #b1) (= ((_ extract 2 2) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state)) #b1)))) ; $procmux$455_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state) #b111)) ; $procmux$392_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#45| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#37| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#35| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) #b010 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#32| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#31| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#29| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#27| state) #b000)))))))) ; $procmux$505_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#46| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#34| state) #b1 #b0)) #b10)) ; $auto$opt_dff.cc:217:make_patterns_logic$829
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#47| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0)) #b10)) ; $auto$opt_dff.cc:217:make_patterns_logic$831
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#48| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0)) #b10)) ; $auto$opt_dff.cc:217:make_patterns_logic$751
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#49| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0)) #b10)) ; $auto$opt_dff.cc:217:make_patterns_logic$835
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#50| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| state) #b1 #b0)) #b10)) ; $auto$opt_dff.cc:217:make_patterns_logic$837
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#51| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$839
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#52| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#36| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) #b1 #b0)) #b01)) ; $auto$opt_dff.cc:217:make_patterns_logic$841
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#53| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#46| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#47| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#48| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#49| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#50| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#51| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#52| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$843
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#54| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#53| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#45| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| state))) ; $auto$rtlil.cc:2218:Mux$929
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#55| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b111 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#54| state))) ; $auto$rtlil.cc:2218:Mux$931
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#56| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#36| state))) ; $auto$opt_dff.cc:242:make_patterns_logic$870
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#57| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#56| state) #b1 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#20| state))) ; $auto$rtlil.cc:2218:Mux$917
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#58| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b0 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#57| state))) ; $auto$rtlil.cc:2218:Mux$919
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#59| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (bvadd (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00001)) ; $add$spi_sram_encoder.v:156$113_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#60| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state))) ; $auto$opt_dff.cc:242:make_patterns_logic$825
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#61| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#60| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#59| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state))) ; $auto$rtlil.cc:2218:Mux$933
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#62| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b00000 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#61| state))) ; $auto$rtlil.cc:2218:Mux$935
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#63| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (bvsub (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| state) #b00100)) ; $auto$wreduce.cc:454:run$690 [4:0]
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#64| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| state) #b00000 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#63| state))) ; $procmux$431_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#65| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) #b00000 #b11000)) ; $procmux$437_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#66| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#65| state) #b00000)) ; $procmux$439_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#67| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#66| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#64| state) #b00000))) ; $procmux$433_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#68| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state))) #b111)) ; $auto$opt_dff.cc:217:make_patterns_logic$749
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#69| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| state) #b1 #b0)) #b11)) ; $auto$opt_dff.cc:217:make_patterns_logic$753
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#70| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$755
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#71| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b1 #b0))) ; $auto$rtlil.cc:2121:Not$758
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#72| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#68| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#48| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#69| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#70| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#71| state)) #b1) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$759
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#73| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#72| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#67| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| state))) ; $auto$rtlil.cc:2218:Mux$959
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#74| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state))) ; $auto$opt_dff.cc:242:make_patterns_logic$763
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#75| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#74| state) (concat ((_ extract 11 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| state)) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#3| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#4| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#5| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#7| state) #b1 #b0))))) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| state))) ; $auto$rtlil.cc:2218:Mux$955
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#76| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b0000000000000000 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#75| state))) ; $auto$rtlil.cc:2218:Mux$957
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#77| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (bvsub (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| state) #b00100)) ; $auto$wreduce.cc:454:run$689 [4:0]
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#78| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b00000 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#77| state))) ; $procmux$407_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#79| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) #b10000 #b00000)) ; $procmux$413_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#80| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#79| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#77| state))) ; $procmux$415_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#81| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b11000 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#77| state))) ; $procmux$419_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#82| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) #b01000 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#81| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#80| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#78| state) #b00000))))) ; $procmux$409_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#83| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state))) #b110)) ; $auto$opt_dff.cc:217:make_patterns_logic$766
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#84| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0)) #b11)) ; $auto$opt_dff.cc:217:make_patterns_logic$768
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#85| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$770
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#86| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#83| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#84| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#85| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#71| state)) #b1) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$774
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#87| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 5) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#86| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#82| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| state))) ; $auto$rtlil.cc:2218:Mux$953
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#88| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b00000000000000000000 (concat ((_ extract 15 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)) #b0000))) ; $procmux$335_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#89| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) (concat ((_ extract 11 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| state)) #b00000000) #b00000000000000000000)) ; $procmux$341_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#90| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#89| state) (concat ((_ extract 15 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)) #b0000))) ; $procmux$343_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#91| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (concat #b0000 (concat (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#13| state) #b0)) (concat ((_ extract 15 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)) #b0000))) ; $procmux$347_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#92| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 17) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#0| state) #b00000000000000000 #b10000000000000000)) ; $auto$wreduce.cc:454:run$687 [16:0]
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#93| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) (concat #b001 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#92| state)) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#91| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#90| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#88| state) #b00000000000000000000))))) ; $procmux$337_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#94| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 20) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#86| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#93| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state))) ; $auto$rtlil.cc:2218:Mux$951
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#95| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#71| state)) #b1) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#34| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state))) ; $auto$opt_dff.cc:242:make_patterns_logic$811
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#96| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 15) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#95| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#25| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#13| state))) ; $auto$rtlil.cc:2218:Mux$937
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#97| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 16) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#95| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#21| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| state))) ; $auto$rtlil.cc:2218:Mux$939
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#98| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#95| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#0| state) #b1 #b0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state))) ; $auto$rtlil.cc:2218:Mux$941
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#99| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#26| state) #b1 #b0)) ; $procmux$553_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#100| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b1 #b0)) ; $procmux$558_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#101| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#36| state) #b1 #b0)) ; $procmux$564_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#102| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#101| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) #b0 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#100| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#99| state) #b0))))) ; $procmux$555_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#103| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#38| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$864
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#104| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#47| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#50| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#103| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$866
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#105| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#104| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#102| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#9| state))) ; $auto$rtlil.cc:2218:Mux$921
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#106| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b1 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#105| state))) ; $auto$rtlil.cc:2218:Mux$923
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#107| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (bvnot (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state))) ; $not$spi_sram_encoder.v:143$110_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#108| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b0 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#107| state))) ; $auto$rtlil.cc:2218:Mux$961
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#109| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b0 ((_ extract 16 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$364_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#110| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) ((_ extract 12 12) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| state)) #b0)) ; $procmux$370_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#111| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#110| state) ((_ extract 16 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$372_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#112| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b0 ((_ extract 16 16) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$376_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#113| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00111)) ; $procmux$384_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#114| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00110)) ; $procmux$385_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#115| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00101)) ; $procmux$386_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#116| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00001)) ; $procmux$390_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#117| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (not (or  (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state)) #b1) (= ((_ extract 1 1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state)) #b1) (= ((_ extract 2 2) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state)) #b1) (= ((_ extract 3 3) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state)) #b1) (= ((_ extract 4 4) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state)) #b1)))) ; $procmux$391_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#118| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#113| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#114| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#115| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#116| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#117| state))) ; $auto$opt_reduce.cc:134:opt_mux$679
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#119| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00100)) ; $procmux$387_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#120| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00011)) ; $procmux$388_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#121| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| state) #b00010)) ; $procmux$389_CMP
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#122| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#119| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#120| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#121| state))) ; $auto$opt_reduce.cc:134:opt_mux$681
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#123| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#122| state) #b1 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#118| state) #b0 #b0))) ; $procmux$383_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#124| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#123| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) #b0 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#112| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#111| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#109| state) #b0)))))) ; $procmux$366_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#125| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (distinct (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#122| state) #b1 #b0) (concat (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state) #b1 #b0) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#118| state) #b1 #b0))) #b010)) ; $auto$opt_dff.cc:217:make_patterns_logic$789
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#126| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#44| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$795
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#127| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#125| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#83| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#84| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#126| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$797
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#128| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#127| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#124| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| state))) ; $auto$rtlil.cc:2218:Mux$947
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#129| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b1 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#128| state))) ; $auto$rtlil.cc:2218:Mux$949
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#130| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b000 ((_ extract 19 17) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$310_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#131| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) ((_ extract 15 13) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| state)) #b000)) ; $procmux$316_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#132| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#131| state) ((_ extract 19 17) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$318_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#133| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) #b000 ((_ extract 19 17) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| state)))) ; $procmux$322_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#134| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#42| state) #b000 (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#133| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#132| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#130| state) #b000))))) ; $procmux$312_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#135| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#83| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#84| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#85| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$806
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#136| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#135| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#134| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| state))) ; $auto$rtlil.cc:2218:Mux$943
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#137| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 3) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b111 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#136| state))) ; $auto$rtlil.cc:2218:Mux$945
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#138| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| state)) #b1) #b0 #b0)) ; $procmux$538_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#139| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#138| state) #b0)) ; $procmux$540_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#140| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#34| state) #b1 #b0)) ; $procmux$544_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#141| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#140| state) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#139| state) #b0))) ; $procmux$542_Y
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#142| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (or  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#43| state))) ; $auto$opt_dff.cc:217:make_patterns_logic$853
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#143| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#68| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#46| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#48| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#142| state) (= ((_ extract 0 0) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| state)) #b1))) ; $auto$opt_dff.cc:242:make_patterns_logic$855
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#144| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#143| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#141| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#1| state))) ; $auto$rtlil.cc:2218:Mux$925
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#145| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) (_ BitVec 1) (ite (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#10| state) #b1 (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#144| state))) ; $auto$rtlil.cc:2218:Mux$927
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_a| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_u| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_i| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_h| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool true)
(define-fun |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_t| ((state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|) (next_state |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)) Bool (and
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#55| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#22| next_state)) ; $auto$opt_dff.cc:764:run$845 \current_state
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#58| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#20| next_state)) ; $auto$opt_dff.cc:764:run$872 \initialized
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#62| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#19| next_state)) ; $auto$opt_dff.cc:764:run$827 \initializing_step
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#73| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#18| next_state)) ; $auto$opt_dff.cc:764:run$761 \input_bits_left
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#76| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#17| next_state)) ; $auto$opt_dff.cc:764:run$765 \input_buffer
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#87| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#16| next_state)) ; $auto$opt_dff.cc:764:run$776 \output_bits_left
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#94| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#15| next_state)) ; $auto$opt_dff.cc:764:run$788 \output_buffer [19:0]
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#96| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#13| next_state)) ; $auto$opt_dff.cc:764:run$823 \request_address
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#97| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#12| next_state)) ; $auto$opt_dff.cc:764:run$818 \request_data_out
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#98| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#11| next_state)) ; $auto$opt_dff.cc:764:run$813 \request_write
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#106| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#9| next_state)) ; $auto$opt_dff.cc:764:run$868 \sram_cs_n
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#108| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#8| next_state)) ; $auto$opt_dff.cc:702:run$858 \sram_sck
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#129| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#6| next_state)) ; $auto$opt_dff.cc:764:run$799 \output_buffer [20]
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#137| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#2| next_state)) ; $auto$opt_dff.cc:764:run$808 \output_buffer [23:21]
  (= (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#145| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15#1| next_state)) ; $auto$opt_dff.cc:764:run$857 \sram_sio_oe
)) ; end of module $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15
; yosys-smt2-module hack_clock
(declare-sort |hack_clock_s| 0)
(declare-fun |hack_clock_is| (|hack_clock_s|) Bool)
(declare-fun |hack_clock#0| (|hack_clock_s|) (_ BitVec 1)) ; \strobe
; yosys-smt2-output strobe 1
; yosys-smt2-register strobe 1
; yosys-smt2-wire strobe 1
(define-fun |hack_clock_n strobe| ((state |hack_clock_s|)) Bool (= ((_ extract 0 0) (|hack_clock#0| state)) #b1))
(declare-fun |hack_clock#1| (|hack_clock_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |hack_clock_n reset| ((state |hack_clock_s|)) Bool (|hack_clock#1| state))
(declare-fun |hack_clock#2| (|hack_clock_s|) (_ BitVec 1)) ; \hack_clk
; yosys-smt2-output hack_clk 1
; yosys-smt2-register hack_clk 1
; yosys-smt2-wire hack_clk 1
(define-fun |hack_clock_n hack_clk| ((state |hack_clock_s|)) Bool (= ((_ extract 0 0) (|hack_clock#2| state)) #b1))
(declare-fun |hack_clock#3| (|hack_clock_s|) (_ BitVec 6)) ; \counter
; yosys-smt2-register counter 6
; yosys-smt2-wire counter 6
(define-fun |hack_clock_n counter| ((state |hack_clock_s|)) (_ BitVec 6) (|hack_clock#3| state))
(declare-fun |hack_clock#4| (|hack_clock_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |hack_clock_n clk| ((state |hack_clock_s|)) Bool (|hack_clock#4| state))
(define-fun |hack_clock#5| ((state |hack_clock_s|)) (_ BitVec 6) (bvadd (|hack_clock#3| state) #b000001)) ; $add$hack_clock.v:21$165_Y
(define-fun |hack_clock#6| ((state |hack_clock_s|)) Bool (= (|hack_clock#3| state) #b010010)) ; $eq$hack_clock.v:23$166_Y
(define-fun |hack_clock#7| ((state |hack_clock_s|)) Bool (or  (|hack_clock#1| state) (|hack_clock#6| state))) ; $auto$opt_dff.cc:276:combine_resets$873
(define-fun |hack_clock#8| ((state |hack_clock_s|)) (_ BitVec 6) (ite (|hack_clock#7| state) #b000000 (|hack_clock#5| state))) ; $auto$rtlil.cc:2218:Mux$915
(define-fun |hack_clock#9| ((state |hack_clock_s|)) (_ BitVec 1) (bvnot (|hack_clock#2| state))) ; $not$hack_clock.v:26$167_Y
(define-fun |hack_clock#10| ((state |hack_clock_s|)) (_ BitVec 1) (ite (|hack_clock#6| state) (|hack_clock#9| state) (|hack_clock#2| state))) ; $auto$rtlil.cc:2218:Mux$909
(define-fun |hack_clock#11| ((state |hack_clock_s|)) (_ BitVec 1) (ite (|hack_clock#1| state) #b0 (|hack_clock#10| state))) ; $auto$rtlil.cc:2218:Mux$911
(define-fun |hack_clock#12| ((state |hack_clock_s|)) (_ BitVec 1) (ite (|hack_clock#6| state) #b1 #b0)) ; $procmux$223_Y
(define-fun |hack_clock#13| ((state |hack_clock_s|)) (_ BitVec 1) (ite (|hack_clock#1| state) #b0 (|hack_clock#12| state))) ; $auto$rtlil.cc:2218:Mux$913
(define-fun |hack_clock_a| ((state |hack_clock_s|)) Bool true)
(define-fun |hack_clock_u| ((state |hack_clock_s|)) Bool true)
(define-fun |hack_clock_i| ((state |hack_clock_s|)) Bool true)
(define-fun |hack_clock_h| ((state |hack_clock_s|)) Bool true)
(define-fun |hack_clock_t| ((state |hack_clock_s|) (next_state |hack_clock_s|)) Bool (and
  (= (|hack_clock#8| state) (|hack_clock#3| next_state)) ; $auto$opt_dff.cc:702:run$875 \counter
  (= (|hack_clock#11| state) (|hack_clock#2| next_state)) ; $auto$opt_dff.cc:764:run$878 \hack_clk
  (= (|hack_clock#13| state) (|hack_clock#0| next_state)) ; $auto$opt_dff.cc:702:run$876 \strobe
)) ; end of module hack_clock
; yosys-smt2-module $paramod/pc/D_WIDTH=16
(declare-sort |$paramod/pc/D_WIDTH=16_s| 0)
(declare-fun |$paramod/pc/D_WIDTH=16_is| (|$paramod/pc/D_WIDTH=16_s|) Bool)
(declare-fun |$paramod/pc/D_WIDTH=16#0| (|$paramod/pc/D_WIDTH=16_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |$paramod/pc/D_WIDTH=16_n reset| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool (|$paramod/pc/D_WIDTH=16#0| state))
; yosys-smt2-cell $paramod/register/D_WIDTH=16 REG
(declare-fun |$paramod/pc/D_WIDTH=16#1| (|$paramod/pc/D_WIDTH=16_s|) (_ BitVec 16)) ; \out
(declare-fun |$paramod/pc/D_WIDTH=16_h REG| (|$paramod/pc/D_WIDTH=16_s|) |$paramod/register/D_WIDTH=16_s|)
; yosys-smt2-wire pc_out 14
(define-fun |$paramod/pc/D_WIDTH=16_n pc_out| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 14) ((_ extract 13 0) (|$paramod/pc/D_WIDTH=16#1| state)))
; yosys-smt2-wire pc_load 1
(define-fun |$paramod/pc/D_WIDTH=16_n pc_load| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool true)
(define-fun |$paramod/pc/D_WIDTH=16#2| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (bvadd (|$paramod/pc/D_WIDTH=16#1| state) #b0000000000000001)) ; $add$pc.v:16$213_Y
(declare-fun |$paramod/pc/D_WIDTH=16#3| (|$paramod/pc/D_WIDTH=16_s|) (_ BitVec 1)) ; \inc
(define-fun |$paramod/pc/D_WIDTH=16#4| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/pc/D_WIDTH=16#3| state)) #b1) (|$paramod/pc/D_WIDTH=16#2| state) (|$paramod/pc/D_WIDTH=16#1| state))) ; $auto$wreduce.cc:454:run$684 [15:0]
(declare-fun |$paramod/pc/D_WIDTH=16#5| (|$paramod/pc/D_WIDTH=16_s|) (_ BitVec 16)) ; \in
(declare-fun |$paramod/pc/D_WIDTH=16#6| (|$paramod/pc/D_WIDTH=16_s|) (_ BitVec 1)) ; \load
(define-fun |$paramod/pc/D_WIDTH=16#7| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|$paramod/pc/D_WIDTH=16#6| state)) #b1) (|$paramod/pc/D_WIDTH=16#5| state) (|$paramod/pc/D_WIDTH=16#4| state))) ; $auto$wreduce.cc:454:run$683 [15:0]
(define-fun |$paramod/pc/D_WIDTH=16#8| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (ite (|$paramod/pc/D_WIDTH=16#0| state) #b0000000000000000 (|$paramod/pc/D_WIDTH=16#7| state))) ; \pc_in
; yosys-smt2-wire pc_in 16
(define-fun |$paramod/pc/D_WIDTH=16_n pc_in| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/pc/D_WIDTH=16#8| state))
; yosys-smt2-output out 16
; yosys-smt2-wire out 16
(define-fun |$paramod/pc/D_WIDTH=16_n out| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/pc/D_WIDTH=16#1| state))
; yosys-smt2-input load 1
; yosys-smt2-wire load 1
(define-fun |$paramod/pc/D_WIDTH=16_n load| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/pc/D_WIDTH=16#6| state)) #b1))
; yosys-smt2-input inc 1
; yosys-smt2-wire inc 1
(define-fun |$paramod/pc/D_WIDTH=16_n inc| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool (= ((_ extract 0 0) (|$paramod/pc/D_WIDTH=16#3| state)) #b1))
; yosys-smt2-input in 16
; yosys-smt2-wire in 16
(define-fun |$paramod/pc/D_WIDTH=16_n in| ((state |$paramod/pc/D_WIDTH=16_s|)) (_ BitVec 16) (|$paramod/pc/D_WIDTH=16#5| state))
(declare-fun |$paramod/pc/D_WIDTH=16#9| (|$paramod/pc/D_WIDTH=16_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |$paramod/pc/D_WIDTH=16_n clk| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool (|$paramod/pc/D_WIDTH=16#9| state))
(define-fun |$paramod/pc/D_WIDTH=16_a| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool 
  (|$paramod/register/D_WIDTH=16_a| (|$paramod/pc/D_WIDTH=16_h REG| state))
)
(define-fun |$paramod/pc/D_WIDTH=16_u| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool 
  (|$paramod/register/D_WIDTH=16_u| (|$paramod/pc/D_WIDTH=16_h REG| state))
)
(define-fun |$paramod/pc/D_WIDTH=16_i| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool 
  (|$paramod/register/D_WIDTH=16_i| (|$paramod/pc/D_WIDTH=16_h REG| state))
)
(define-fun |$paramod/pc/D_WIDTH=16_h| ((state |$paramod/pc/D_WIDTH=16_s|)) Bool (and
  (= (|$paramod/pc/D_WIDTH=16_is| state) (|$paramod/register/D_WIDTH=16_is| (|$paramod/pc/D_WIDTH=16_h REG| state)))
  (= (|$paramod/pc/D_WIDTH=16#1| state) (|$paramod/register/D_WIDTH=16_n out| (|$paramod/pc/D_WIDTH=16_h REG| state))) ; $paramod/register/D_WIDTH=16.out
  (= true (|$paramod/register/D_WIDTH=16_n load| (|$paramod/pc/D_WIDTH=16_h REG| state))) ; $paramod/register/D_WIDTH=16.load
  (= (|$paramod/pc/D_WIDTH=16#8| state) (|$paramod/register/D_WIDTH=16_n in| (|$paramod/pc/D_WIDTH=16_h REG| state))) ; $paramod/register/D_WIDTH=16.in
  (= (|$paramod/pc/D_WIDTH=16#9| state) (|$paramod/register/D_WIDTH=16_n clk| (|$paramod/pc/D_WIDTH=16_h REG| state))) ; $paramod/register/D_WIDTH=16.clk
  (|$paramod/register/D_WIDTH=16_h| (|$paramod/pc/D_WIDTH=16_h REG| state))
))
(define-fun |$paramod/pc/D_WIDTH=16_t| ((state |$paramod/pc/D_WIDTH=16_s|) (next_state |$paramod/pc/D_WIDTH=16_s|)) Bool 
  (|$paramod/register/D_WIDTH=16_t| (|$paramod/pc/D_WIDTH=16_h REG| state) (|$paramod/pc/D_WIDTH=16_h REG| next_state))
) ; end of module $paramod/pc/D_WIDTH=16
; yosys-smt2-module hack_cpu
(declare-sort |hack_cpu_s| 0)
(declare-fun |hack_cpu_is| (|hack_cpu_s|) Bool)
(declare-fun |hack_cpu#0| (|hack_cpu_s|) (_ BitVec 1)) ; \instruction [15]
(define-fun |hack_cpu#1| ((state |hack_cpu_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_cpu#0| state)) #b1) #b1 #b0)) ; \instruction_type_C
(declare-fun |hack_cpu#2| (|hack_cpu_s|) (_ BitVec 1)) ; \instruction [3]
(define-fun |hack_cpu#3| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (|hack_cpu#1| state) (|hack_cpu#2| state))) ; \writeM
; yosys-smt2-output writeM 1
; yosys-smt2-wire writeM 1
(define-fun |hack_cpu_n writeM| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#3| state)) #b1))
(declare-fun |hack_cpu#4| (|hack_cpu_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |hack_cpu_n reset| ((state |hack_cpu_s|)) Bool (|hack_cpu#4| state))
; yosys-smt2-cell $paramod/pc/D_WIDTH=16 PC
(declare-fun |hack_cpu#5| (|hack_cpu_s|) (_ BitVec 16)) ; \pc_output
(declare-fun |hack_cpu_h PC| (|hack_cpu_s|) |$paramod/pc/D_WIDTH=16_s|)
; yosys-smt2-wire pc_output 16
(define-fun |hack_cpu_n pc_output| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#5| state))
; yosys-smt2-cell $paramod/dmux8way/D_WIDTH=1 DMuxJMP
(declare-fun |hack_cpu#6| (|hack_cpu_s|) Bool) ; \instruction_C_jmp
(declare-fun |hack_cpu#7| (|hack_cpu_s|) Bool) ; \instruction_C_jle
(declare-fun |hack_cpu#8| (|hack_cpu_s|) Bool) ; \instruction_C_jne
(declare-fun |hack_cpu#9| (|hack_cpu_s|) Bool) ; \instruction_C_jlt
(declare-fun |hack_cpu#10| (|hack_cpu_s|) Bool) ; \instruction_C_jge
(declare-fun |hack_cpu#11| (|hack_cpu_s|) Bool) ; \instruction_C_jeq
(declare-fun |hack_cpu#12| (|hack_cpu_s|) Bool) ; \instruction_C_jgt
(declare-fun |hack_cpu#13| (|hack_cpu_s|) Bool) ; \instruction_C_noJump
(declare-fun |hack_cpu_h DMuxJMP| (|hack_cpu_s|) |$paramod/dmux8way/D_WIDTH=1_s|)
; yosys-smt2-cell $paramod/hack_alu/D_WIDTH=16 ALU
(declare-fun |hack_cpu#14| (|hack_cpu_s|) Bool) ; \alu_zr
(declare-fun |hack_cpu#15| (|hack_cpu_s|) (_ BitVec 16)) ; \alu_out
(declare-fun |hack_cpu#16| (|hack_cpu_s|) Bool) ; \alu_ng
(declare-fun |hack_cpu_h ALU| (|hack_cpu_s|) |$paramod/hack_alu/D_WIDTH=16_s|)
(define-fun |hack_cpu#17| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (ite (|hack_cpu#14| state) #b1 #b0) (ite (|hack_cpu#16| state) #b1 #b0))) ; $or$hack_cpu.v:133$143_Y
(define-fun |hack_cpu#18| ((state |hack_cpu_s|)) (_ BitVec 1) (bvnot (|hack_cpu#17| state))) ; $not$hack_cpu.v:133$144_Y
(define-fun |hack_cpu#19| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#12| state) #b1 #b0) (|hack_cpu#18| state))) ; $and$hack_cpu.v:133$145_Y
(define-fun |hack_cpu#20| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#11| state) #b1 #b0) (ite (|hack_cpu#14| state) #b1 #b0))) ; $and$hack_cpu.v:134$146_Y
(define-fun |hack_cpu#21| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#19| state) (|hack_cpu#20| state))) ; $or$hack_cpu.v:133$147_Y
(define-fun |hack_cpu#22| ((state |hack_cpu_s|)) (_ BitVec 1) (bvnot (ite (|hack_cpu#16| state) #b1 #b0))) ; $not$hack_cpu.v:135$148_Y
(define-fun |hack_cpu#23| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (ite (|hack_cpu#14| state) #b1 #b0) (|hack_cpu#22| state))) ; $or$hack_cpu.v:135$149_Y
(define-fun |hack_cpu#24| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#10| state) #b1 #b0) (|hack_cpu#23| state))) ; $and$hack_cpu.v:135$150_Y
(define-fun |hack_cpu#25| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#21| state) (|hack_cpu#24| state))) ; $or$hack_cpu.v:133$151_Y
(define-fun |hack_cpu#26| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#9| state) #b1 #b0) (ite (|hack_cpu#16| state) #b1 #b0))) ; $and$hack_cpu.v:136$152_Y
(define-fun |hack_cpu#27| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#25| state) (|hack_cpu#26| state))) ; $or$hack_cpu.v:133$153_Y
(define-fun |hack_cpu#28| ((state |hack_cpu_s|)) (_ BitVec 1) (bvnot (ite (|hack_cpu#14| state) #b1 #b0))) ; $not$hack_cpu.v:137$154_Y
(define-fun |hack_cpu#29| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#8| state) #b1 #b0) (|hack_cpu#28| state))) ; $and$hack_cpu.v:137$155_Y
(define-fun |hack_cpu#30| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#27| state) (|hack_cpu#29| state))) ; $or$hack_cpu.v:133$156_Y
(define-fun |hack_cpu#31| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (ite (|hack_cpu#7| state) #b1 #b0) (|hack_cpu#17| state))) ; $and$hack_cpu.v:138$158_Y
(define-fun |hack_cpu#32| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#30| state) (|hack_cpu#31| state))) ; $or$hack_cpu.v:133$159_Y
(define-fun |hack_cpu#33| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#32| state) (ite (|hack_cpu#6| state) #b1 #b0))) ; \jump_condition_met
(define-fun |hack_cpu#34| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (|hack_cpu#1| state) (|hack_cpu#33| state))) ; \pc_load
; yosys-smt2-wire pc_load 1
(define-fun |hack_cpu_n pc_load| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#34| state)) #b1))
(define-fun |hack_cpu#35| ((state |hack_cpu_s|)) (_ BitVec 1) (bvnot (|hack_cpu#34| state))) ; \pc_inc
; yosys-smt2-wire pc_inc 1
(define-fun |hack_cpu_n pc_inc| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#35| state)) #b1))
; yosys-smt2-cell $paramod/register/D_WIDTH=16 AReg
(declare-fun |hack_cpu#36| (|hack_cpu_s|) (_ BitVec 16)) ; \areg_out
(declare-fun |hack_cpu_h AReg| (|hack_cpu_s|) |$paramod/register/D_WIDTH=16_s|)
(declare-fun |hack_cpu#37| (|hack_cpu_s|) (_ BitVec 3)) ; \instruction [2:0]
(declare-fun |hack_cpu#38| (|hack_cpu_s|) (_ BitVec 11)) ; \instruction [14:4]
(define-fun |hack_cpu#39| ((state |hack_cpu_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|hack_cpu#0| state)) #b1) (|hack_cpu#15| state) (concat #b0 (concat (|hack_cpu#38| state) (concat (|hack_cpu#2| state) (|hack_cpu#37| state)))))) ; \areg_in
(define-fun |hack_cpu#40| ((state |hack_cpu_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_cpu#0| state)) #b1) #b0 #b1)) ; \instruction_type_A
(define-fun |hack_cpu#41| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (|hack_cpu#1| state) ((_ extract 1 1) (|hack_cpu#38| state)))) ; $and$hack_cpu.v:110$137_Y
(define-fun |hack_cpu#42| ((state |hack_cpu_s|)) (_ BitVec 1) (bvor (|hack_cpu#40| state) (|hack_cpu#41| state))) ; \areg_load
(define-fun |hack_cpu#43| ((state |hack_cpu_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|hack_cpu#42| state)) #b1) (|hack_cpu#39| state) (|hack_cpu#36| state))) ; \pc_in
; yosys-smt2-wire pc_in 16
(define-fun |hack_cpu_n pc_in| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#43| state))
; yosys-smt2-output pc 15
; yosys-smt2-wire pc 15
(define-fun |hack_cpu_n pc| ((state |hack_cpu_s|)) (_ BitVec 15) ((_ extract 14 0) (|hack_cpu#5| state)))
; yosys-smt2-output outM 16
; yosys-smt2-wire outM 16
(define-fun |hack_cpu_n outM| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#15| state))
; yosys-smt2-wire jump_condition_met 1
(define-fun |hack_cpu_n jump_condition_met| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#33| state)) #b1))
; yosys-smt2-wire instruction_type_C 1
(define-fun |hack_cpu_n instruction_type_C| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#1| state)) #b1))
; yosys-smt2-wire instruction_type_A 1
(define-fun |hack_cpu_n instruction_type_A| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#40| state)) #b1))
; yosys-smt2-wire instruction_C_source_m 1
(define-fun |hack_cpu_n instruction_C_source_m| ((state |hack_cpu_s|)) Bool (= ((_ extract 8 8) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire instruction_C_noJump 1
(define-fun |hack_cpu_n instruction_C_noJump| ((state |hack_cpu_s|)) Bool (|hack_cpu#13| state))
; yosys-smt2-wire instruction_C_jne 1
(define-fun |hack_cpu_n instruction_C_jne| ((state |hack_cpu_s|)) Bool (|hack_cpu#8| state))
; yosys-smt2-wire instruction_C_jmp 1
(define-fun |hack_cpu_n instruction_C_jmp| ((state |hack_cpu_s|)) Bool (|hack_cpu#6| state))
; yosys-smt2-wire instruction_C_jlt 1
(define-fun |hack_cpu_n instruction_C_jlt| ((state |hack_cpu_s|)) Bool (|hack_cpu#9| state))
; yosys-smt2-wire instruction_C_jle 1
(define-fun |hack_cpu_n instruction_C_jle| ((state |hack_cpu_s|)) Bool (|hack_cpu#7| state))
; yosys-smt2-wire instruction_C_jgt 1
(define-fun |hack_cpu_n instruction_C_jgt| ((state |hack_cpu_s|)) Bool (|hack_cpu#12| state))
; yosys-smt2-wire instruction_C_jge 1
(define-fun |hack_cpu_n instruction_C_jge| ((state |hack_cpu_s|)) Bool (|hack_cpu#10| state))
; yosys-smt2-wire instruction_C_jeq 1
(define-fun |hack_cpu_n instruction_C_jeq| ((state |hack_cpu_s|)) Bool (|hack_cpu#11| state))
; yosys-smt2-wire instruction_C_dest_m 1
(define-fun |hack_cpu_n instruction_C_dest_m| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#2| state)) #b1))
; yosys-smt2-wire instruction_C_dest_d 1
(define-fun |hack_cpu_n instruction_C_dest_d| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire instruction_C_dest_a 1
(define-fun |hack_cpu_n instruction_C_dest_a| ((state |hack_cpu_s|)) Bool (= ((_ extract 1 1) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire instruction_A_address 15
(define-fun |hack_cpu_n instruction_A_address| ((state |hack_cpu_s|)) (_ BitVec 15) (concat (|hack_cpu#38| state) (concat (|hack_cpu#2| state) (|hack_cpu#37| state))))
; yosys-smt2-input instruction 16
; yosys-smt2-wire instruction 16
(define-fun |hack_cpu_n instruction| ((state |hack_cpu_s|)) (_ BitVec 16) (concat (|hack_cpu#0| state) (concat (|hack_cpu#38| state) (concat (|hack_cpu#2| state) (|hack_cpu#37| state)))))
(declare-fun |hack_cpu#44| (|hack_cpu_s|) (_ BitVec 16)) ; \inM
; yosys-smt2-input inM 16
; yosys-smt2-wire inM 16
(define-fun |hack_cpu_n inM| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#44| state))
; yosys-smt2-cell $paramod/register/D_WIDTH=16 DReg
(declare-fun |hack_cpu#45| (|hack_cpu_s|) (_ BitVec 16)) ; \alu_x
(declare-fun |hack_cpu_h DReg| (|hack_cpu_s|) |$paramod/register/D_WIDTH=16_s|)
; yosys-smt2-wire dreg_out 16
(define-fun |hack_cpu_n dreg_out| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#45| state))
(define-fun |hack_cpu#46| ((state |hack_cpu_s|)) (_ BitVec 1) (bvand (|hack_cpu#1| state) ((_ extract 0 0) (|hack_cpu#38| state)))) ; \dreg_load
; yosys-smt2-wire dreg_load 1
(define-fun |hack_cpu_n dreg_load| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#46| state)) #b1))
; yosys-smt2-wire dreg_in 16
(define-fun |hack_cpu_n dreg_in| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#15| state))
(declare-fun |hack_cpu#47| (|hack_cpu_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |hack_cpu_n clk| ((state |hack_cpu_s|)) Bool (|hack_cpu#47| state))
; yosys-smt2-wire areg_out 16
(define-fun |hack_cpu_n areg_out| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#36| state))
; yosys-smt2-wire areg_load 1
(define-fun |hack_cpu_n areg_load| ((state |hack_cpu_s|)) Bool (= ((_ extract 0 0) (|hack_cpu#42| state)) #b1))
; yosys-smt2-wire areg_in 16
(define-fun |hack_cpu_n areg_in| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#39| state))
; yosys-smt2-wire alu_zy 1
(define-fun |hack_cpu_n alu_zy| ((state |hack_cpu_s|)) Bool (= ((_ extract 5 5) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire alu_zx 1
(define-fun |hack_cpu_n alu_zx| ((state |hack_cpu_s|)) Bool (= ((_ extract 7 7) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire alu_zr 1
(define-fun |hack_cpu_n alu_zr| ((state |hack_cpu_s|)) Bool (|hack_cpu#14| state))
(define-fun |hack_cpu#48| ((state |hack_cpu_s|)) (_ BitVec 16) (ite (= ((_ extract 8 8) (|hack_cpu#38| state)) #b1) (|hack_cpu#44| state) (|hack_cpu#36| state))) ; \alu_y
; yosys-smt2-wire alu_y 16
(define-fun |hack_cpu_n alu_y| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#48| state))
; yosys-smt2-wire alu_x 16
(define-fun |hack_cpu_n alu_x| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#45| state))
; yosys-smt2-wire alu_out 16
(define-fun |hack_cpu_n alu_out| ((state |hack_cpu_s|)) (_ BitVec 16) (|hack_cpu#15| state))
; yosys-smt2-wire alu_ny 1
(define-fun |hack_cpu_n alu_ny| ((state |hack_cpu_s|)) Bool (= ((_ extract 4 4) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire alu_nx 1
(define-fun |hack_cpu_n alu_nx| ((state |hack_cpu_s|)) Bool (= ((_ extract 6 6) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire alu_no 1
(define-fun |hack_cpu_n alu_no| ((state |hack_cpu_s|)) Bool (= ((_ extract 2 2) (|hack_cpu#38| state)) #b1))
; yosys-smt2-wire alu_ng 1
(define-fun |hack_cpu_n alu_ng| ((state |hack_cpu_s|)) Bool (|hack_cpu#16| state))
; yosys-smt2-wire alu_f 1
(define-fun |hack_cpu_n alu_f| ((state |hack_cpu_s|)) Bool (= ((_ extract 3 3) (|hack_cpu#38| state)) #b1))
; yosys-smt2-output addressM 15
; yosys-smt2-wire addressM 15
(define-fun |hack_cpu_n addressM| ((state |hack_cpu_s|)) (_ BitVec 15) ((_ extract 14 0) (|hack_cpu#36| state)))
(define-fun |hack_cpu_a| ((state |hack_cpu_s|)) Bool (and
  (|$paramod/hack_alu/D_WIDTH=16_a| (|hack_cpu_h ALU| state))
  (|$paramod/register/D_WIDTH=16_a| (|hack_cpu_h AReg| state))
  (|$paramod/dmux8way/D_WIDTH=1_a| (|hack_cpu_h DMuxJMP| state))
  (|$paramod/register/D_WIDTH=16_a| (|hack_cpu_h DReg| state))
  (|$paramod/pc/D_WIDTH=16_a| (|hack_cpu_h PC| state))
))
(define-fun |hack_cpu_u| ((state |hack_cpu_s|)) Bool (and
  (|$paramod/hack_alu/D_WIDTH=16_u| (|hack_cpu_h ALU| state))
  (|$paramod/register/D_WIDTH=16_u| (|hack_cpu_h AReg| state))
  (|$paramod/dmux8way/D_WIDTH=1_u| (|hack_cpu_h DMuxJMP| state))
  (|$paramod/register/D_WIDTH=16_u| (|hack_cpu_h DReg| state))
  (|$paramod/pc/D_WIDTH=16_u| (|hack_cpu_h PC| state))
))
(define-fun |hack_cpu_i| ((state |hack_cpu_s|)) Bool (and
  (|$paramod/hack_alu/D_WIDTH=16_i| (|hack_cpu_h ALU| state))
  (|$paramod/register/D_WIDTH=16_i| (|hack_cpu_h AReg| state))
  (|$paramod/dmux8way/D_WIDTH=1_i| (|hack_cpu_h DMuxJMP| state))
  (|$paramod/register/D_WIDTH=16_i| (|hack_cpu_h DReg| state))
  (|$paramod/pc/D_WIDTH=16_i| (|hack_cpu_h PC| state))
))
(define-fun |hack_cpu_h| ((state |hack_cpu_s|)) Bool (and
  (= (|hack_cpu_is| state) (|$paramod/hack_alu/D_WIDTH=16_is| (|hack_cpu_h ALU| state)))
  (= (= ((_ extract 5 5) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n zy| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.zy
  (= (= ((_ extract 7 7) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n zx| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.zx
  (= (|hack_cpu#14| state) (|$paramod/hack_alu/D_WIDTH=16_n zr| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.zr
  (= (|hack_cpu#48| state) (|$paramod/hack_alu/D_WIDTH=16_n y| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.y
  (= (|hack_cpu#45| state) (|$paramod/hack_alu/D_WIDTH=16_n x| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.x
  (= (|hack_cpu#15| state) (|$paramod/hack_alu/D_WIDTH=16_n out| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.out
  (= (= ((_ extract 4 4) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n ny| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.ny
  (= (= ((_ extract 6 6) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n nx| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.nx
  (= (= ((_ extract 2 2) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n no| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.no
  (= (|hack_cpu#16| state) (|$paramod/hack_alu/D_WIDTH=16_n ng| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.ng
  (= (= ((_ extract 3 3) (|hack_cpu#38| state)) #b1) (|$paramod/hack_alu/D_WIDTH=16_n f| (|hack_cpu_h ALU| state))) ; $paramod/hack_alu/D_WIDTH=16.f
  (= (|hack_cpu_is| state) (|$paramod/register/D_WIDTH=16_is| (|hack_cpu_h AReg| state)))
  (= (|hack_cpu#36| state) (|$paramod/register/D_WIDTH=16_n out| (|hack_cpu_h AReg| state))) ; $paramod/register/D_WIDTH=16.out
  (= (= ((_ extract 0 0) (|hack_cpu#42| state)) #b1) (|$paramod/register/D_WIDTH=16_n load| (|hack_cpu_h AReg| state))) ; $paramod/register/D_WIDTH=16.load
  (= (|hack_cpu#39| state) (|$paramod/register/D_WIDTH=16_n in| (|hack_cpu_h AReg| state))) ; $paramod/register/D_WIDTH=16.in
  (= (|hack_cpu#47| state) (|$paramod/register/D_WIDTH=16_n clk| (|hack_cpu_h AReg| state))) ; $paramod/register/D_WIDTH=16.clk
  (= (|hack_cpu_is| state) (|$paramod/dmux8way/D_WIDTH=1_is| (|hack_cpu_h DMuxJMP| state)))
  (= (|hack_cpu#37| state) (|$paramod/dmux8way/D_WIDTH=1_n sel| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.sel
  (= true (|$paramod/dmux8way/D_WIDTH=1_n in| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.in
  (= (|hack_cpu#6| state) (|$paramod/dmux8way/D_WIDTH=1_n h| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.h
  (= (|hack_cpu#7| state) (|$paramod/dmux8way/D_WIDTH=1_n g| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.g
  (= (|hack_cpu#8| state) (|$paramod/dmux8way/D_WIDTH=1_n f| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.f
  (= (|hack_cpu#9| state) (|$paramod/dmux8way/D_WIDTH=1_n e| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.e
  (= (|hack_cpu#10| state) (|$paramod/dmux8way/D_WIDTH=1_n d| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.d
  (= (|hack_cpu#11| state) (|$paramod/dmux8way/D_WIDTH=1_n c| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.c
  (= (|hack_cpu#12| state) (|$paramod/dmux8way/D_WIDTH=1_n b| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.b
  (= (|hack_cpu#13| state) (|$paramod/dmux8way/D_WIDTH=1_n a| (|hack_cpu_h DMuxJMP| state))) ; $paramod/dmux8way/D_WIDTH=1.a
  (= (|hack_cpu_is| state) (|$paramod/register/D_WIDTH=16_is| (|hack_cpu_h DReg| state)))
  (= (|hack_cpu#45| state) (|$paramod/register/D_WIDTH=16_n out| (|hack_cpu_h DReg| state))) ; $paramod/register/D_WIDTH=16.out
  (= (= ((_ extract 0 0) (|hack_cpu#46| state)) #b1) (|$paramod/register/D_WIDTH=16_n load| (|hack_cpu_h DReg| state))) ; $paramod/register/D_WIDTH=16.load
  (= (|hack_cpu#15| state) (|$paramod/register/D_WIDTH=16_n in| (|hack_cpu_h DReg| state))) ; $paramod/register/D_WIDTH=16.in
  (= (|hack_cpu#47| state) (|$paramod/register/D_WIDTH=16_n clk| (|hack_cpu_h DReg| state))) ; $paramod/register/D_WIDTH=16.clk
  (= (|hack_cpu_is| state) (|$paramod/pc/D_WIDTH=16_is| (|hack_cpu_h PC| state)))
  (= (|hack_cpu#4| state) (|$paramod/pc/D_WIDTH=16_n reset| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.reset
  (= (|hack_cpu#5| state) (|$paramod/pc/D_WIDTH=16_n out| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.out
  (= (= ((_ extract 0 0) (|hack_cpu#34| state)) #b1) (|$paramod/pc/D_WIDTH=16_n load| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.load
  (= (= ((_ extract 0 0) (|hack_cpu#35| state)) #b1) (|$paramod/pc/D_WIDTH=16_n inc| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.inc
  (= (|hack_cpu#43| state) (|$paramod/pc/D_WIDTH=16_n in| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.in
  (= (|hack_cpu#47| state) (|$paramod/pc/D_WIDTH=16_n clk| (|hack_cpu_h PC| state))) ; $paramod/pc/D_WIDTH=16.clk
  (|$paramod/hack_alu/D_WIDTH=16_h| (|hack_cpu_h ALU| state))
  (|$paramod/register/D_WIDTH=16_h| (|hack_cpu_h AReg| state))
  (|$paramod/dmux8way/D_WIDTH=1_h| (|hack_cpu_h DMuxJMP| state))
  (|$paramod/register/D_WIDTH=16_h| (|hack_cpu_h DReg| state))
  (|$paramod/pc/D_WIDTH=16_h| (|hack_cpu_h PC| state))
))
(define-fun |hack_cpu_t| ((state |hack_cpu_s|) (next_state |hack_cpu_s|)) Bool (and
  (|$paramod/hack_alu/D_WIDTH=16_t| (|hack_cpu_h ALU| state) (|hack_cpu_h ALU| next_state))
  (|$paramod/register/D_WIDTH=16_t| (|hack_cpu_h AReg| state) (|hack_cpu_h AReg| next_state))
  (|$paramod/dmux8way/D_WIDTH=1_t| (|hack_cpu_h DMuxJMP| state) (|hack_cpu_h DMuxJMP| next_state))
  (|$paramod/register/D_WIDTH=16_t| (|hack_cpu_h DReg| state) (|hack_cpu_h DReg| next_state))
  (|$paramod/pc/D_WIDTH=16_t| (|hack_cpu_h PC| state) (|hack_cpu_h PC| next_state))
)) ; end of module hack_cpu
; yosys-smt2-module hack_soc
(declare-sort |hack_soc_s| 0)
(declare-fun |hack_soc_is| (|hack_soc_s|) Bool)
(declare-fun |hack_soc#0| (|hack_soc_s|) Bool) ; \rom_loader_load
; yosys-smt2-wire rom_write_enable 1
(define-fun |hack_soc_n rom_write_enable| ((state |hack_soc_s|)) Bool (|hack_soc#0| state))
; yosys-smt2-cell $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15 rom_encoder_0
(declare-fun |hack_soc#1| (|hack_soc_s|) Bool) ; \rom_sio_oe
(declare-fun |hack_soc#2| (|hack_soc_s|) Bool) ; \rom_sio3_o
(declare-fun |hack_soc#3| (|hack_soc_s|) Bool) ; \rom_sio2_o
(declare-fun |hack_soc#4| (|hack_soc_s|) Bool) ; \rom_sio1_o
(declare-fun |hack_soc#5| (|hack_soc_s|) Bool) ; \rom_sio0_o
(declare-fun |hack_soc#6| (|hack_soc_s|) Bool) ; \rom_sck
(declare-fun |hack_soc#7| (|hack_soc_s|) Bool) ; \rom_cs_n
(declare-fun |hack_soc#8| (|hack_soc_s|) Bool) ; \rom_initialized
(declare-fun |hack_soc#9| (|hack_soc_s|) (_ BitVec 16)) ; \hack_instruction
(declare-fun |hack_soc#10| (|hack_soc_s|) Bool) ; \rom_busy
(declare-fun |hack_soc_h rom_encoder_0| (|hack_soc_s|) |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)
; yosys-smt2-output rom_sio_oe 1
; yosys-smt2-wire rom_sio_oe 1
(define-fun |hack_soc_n rom_sio_oe| ((state |hack_soc_s|)) Bool (|hack_soc#1| state))
; yosys-smt2-output rom_sio3_o 1
; yosys-smt2-wire rom_sio3_o 1
(define-fun |hack_soc_n rom_sio3_o| ((state |hack_soc_s|)) Bool (|hack_soc#2| state))
(declare-fun |hack_soc#11| (|hack_soc_s|) Bool) ; \rom_sio3_i
; yosys-smt2-input rom_sio3_i 1
; yosys-smt2-wire rom_sio3_i 1
(define-fun |hack_soc_n rom_sio3_i| ((state |hack_soc_s|)) Bool (|hack_soc#11| state))
; yosys-smt2-output rom_sio2_o 1
; yosys-smt2-wire rom_sio2_o 1
(define-fun |hack_soc_n rom_sio2_o| ((state |hack_soc_s|)) Bool (|hack_soc#3| state))
(declare-fun |hack_soc#12| (|hack_soc_s|) Bool) ; \rom_sio2_i
; yosys-smt2-input rom_sio2_i 1
; yosys-smt2-wire rom_sio2_i 1
(define-fun |hack_soc_n rom_sio2_i| ((state |hack_soc_s|)) Bool (|hack_soc#12| state))
; yosys-smt2-output rom_sio1_o 1
; yosys-smt2-wire rom_sio1_o 1
(define-fun |hack_soc_n rom_sio1_o| ((state |hack_soc_s|)) Bool (|hack_soc#4| state))
(declare-fun |hack_soc#13| (|hack_soc_s|) Bool) ; \rom_sio1_i
; yosys-smt2-input rom_sio1_i 1
; yosys-smt2-wire rom_sio1_i 1
(define-fun |hack_soc_n rom_sio1_i| ((state |hack_soc_s|)) Bool (|hack_soc#13| state))
; yosys-smt2-output rom_sio0_o 1
; yosys-smt2-wire rom_sio0_o 1
(define-fun |hack_soc_n rom_sio0_o| ((state |hack_soc_s|)) Bool (|hack_soc#5| state))
(declare-fun |hack_soc#14| (|hack_soc_s|) Bool) ; \rom_sio0_i
; yosys-smt2-input rom_sio0_i 1
; yosys-smt2-wire rom_sio0_i 1
(define-fun |hack_soc_n rom_sio0_i| ((state |hack_soc_s|)) Bool (|hack_soc#14| state))
; yosys-smt2-output rom_sck 1
; yosys-smt2-wire rom_sck 1
(define-fun |hack_soc_n rom_sck| ((state |hack_soc_s|)) Bool (|hack_soc#6| state))
(define-fun |hack_soc#15| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#10| state) false))) ; $logic_not$hack_soc.v:213$25_Y
; yosys-smt2-cell hack_clock hack_clock_0
(declare-fun |hack_soc#16| (|hack_soc_s|) Bool) ; \hack_clk_strobe
(declare-fun |hack_soc#17| (|hack_soc_s|) Bool) ; \hack_clk
(declare-fun |hack_soc_h hack_clock_0| (|hack_soc_s|) |hack_clock_s|)
(define-fun |hack_soc#18| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#15| state) false) (or  (|hack_soc#17| state) false))) ; $logic_and$hack_soc.v:213$26_Y
(define-fun |hack_soc#19| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#18| state) false) (or  (|hack_soc#16| state) false))) ; \hack_rom_request
; yosys-smt2-cell $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15 rom_loader
(declare-fun |hack_soc#20| (|hack_soc_s|) Bool) ; \rom_loader_request
(declare-fun |hack_soc#21| (|hack_soc_s|) (_ BitVec 16)) ; \rom_loader_output_data
(declare-fun |hack_soc#22| (|hack_soc_s|) (_ BitVec 15)) ; \rom_loader_output_address
(declare-fun |hack_soc#23| (|hack_soc_s|) Bool) ; \rom_loader_load_received
(declare-fun |hack_soc#24| (|hack_soc_s|) Bool) ; \rom_loader_ack
(declare-fun |hack_soc_h rom_loader| (|hack_soc_s|) |$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_s|)
(define-fun |hack_soc#25| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#0| state) (ite (|hack_soc#20| state) #b1 #b0) (ite (|hack_soc#19| state) #b1 #b0))) ; \rom_request
; yosys-smt2-wire rom_request 1
(define-fun |hack_soc_n rom_request| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#25| state)) #b1))
; yosys-smt2-wire rom_loading_process 1
(define-fun |hack_soc_n rom_loading_process| ((state |hack_soc_s|)) Bool (|hack_soc#0| state))
(declare-fun |hack_soc#26| (|hack_soc_s|) Bool) ; \rom_loader_reset
; yosys-smt2-input rom_loader_reset 1
; yosys-smt2-wire rom_loader_reset 1
(define-fun |hack_soc_n rom_loader_reset| ((state |hack_soc_s|)) Bool (|hack_soc#26| state))
; yosys-smt2-wire rom_loader_request 1
(define-fun |hack_soc_n rom_loader_request| ((state |hack_soc_s|)) Bool (|hack_soc#20| state))
; yosys-smt2-wire rom_loader_output_data 16
(define-fun |hack_soc_n rom_loader_output_data| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#21| state))
; yosys-smt2-wire rom_loader_output_address 15
(define-fun |hack_soc_n rom_loader_output_address| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#22| state))
; yosys-smt2-output rom_loader_load_received 1
; yosys-smt2-wire rom_loader_load_received 1
(define-fun |hack_soc_n rom_loader_load_received| ((state |hack_soc_s|)) Bool (|hack_soc#23| state))
; yosys-smt2-input rom_loader_load 1
; yosys-smt2-wire rom_loader_load 1
(define-fun |hack_soc_n rom_loader_load| ((state |hack_soc_s|)) Bool (|hack_soc#0| state))
(declare-fun |hack_soc#27| (|hack_soc_s|) (_ BitVec 16)) ; \rom_loader_data
; yosys-smt2-input rom_loader_data 16
; yosys-smt2-wire rom_loader_data 16
(define-fun |hack_soc_n rom_loader_data| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#27| state))
; yosys-smt2-output rom_loader_ack 1
; yosys-smt2-wire rom_loader_ack 1
(define-fun |hack_soc_n rom_loader_ack| ((state |hack_soc_s|)) Bool (|hack_soc#24| state))
; yosys-smt2-wire rom_initialized 1
(define-fun |hack_soc_n rom_initialized| ((state |hack_soc_s|)) Bool (|hack_soc#8| state))
; yosys-smt2-output rom_cs_n 1
; yosys-smt2-wire rom_cs_n 1
(define-fun |hack_soc_n rom_cs_n| ((state |hack_soc_s|)) Bool (|hack_soc#7| state))
; yosys-smt2-wire rom_busy 1
(define-fun |hack_soc_n rom_busy| ((state |hack_soc_s|)) Bool (|hack_soc#10| state))
; yosys-smt2-cell hack_cpu cpu
(declare-fun |hack_soc#28| (|hack_soc_s|) Bool) ; \hack_writeM
(declare-fun |hack_soc#29| (|hack_soc_s|) (_ BitVec 15)) ; \hack_pc
(declare-fun |hack_soc#30| (|hack_soc_s|) (_ BitVec 16)) ; \hack_outM
(declare-fun |hack_soc#31| (|hack_soc_s|) (_ BitVec 15)) ; \hack_addressM
(declare-fun |hack_soc_h cpu| (|hack_soc_s|) |hack_cpu_s|)
(define-fun |hack_soc#32| ((state |hack_soc_s|)) (_ BitVec 15) (ite (|hack_soc#0| state) (|hack_soc#22| state) (|hack_soc#29| state))) ; \rom_address
; yosys-smt2-wire rom_address 15
(define-fun |hack_soc_n rom_address| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#32| state))
(declare-fun |hack_soc#33| (|hack_soc_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |hack_soc_n reset| ((state |hack_soc_s|)) Bool (|hack_soc#33| state))
; yosys-smt2-cell $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15 ram_encoder_0
(declare-fun |hack_soc#34| (|hack_soc_s|) Bool) ; \ram_sio_oe
(declare-fun |hack_soc#35| (|hack_soc_s|) Bool) ; \ram_sio3_o
(declare-fun |hack_soc#36| (|hack_soc_s|) Bool) ; \ram_sio2_o
(declare-fun |hack_soc#37| (|hack_soc_s|) Bool) ; \ram_sio1_o
(declare-fun |hack_soc#38| (|hack_soc_s|) Bool) ; \ram_sio0_o
(declare-fun |hack_soc#39| (|hack_soc_s|) Bool) ; \ram_sck
(declare-fun |hack_soc#40| (|hack_soc_s|) Bool) ; \ram_cs_n
(declare-fun |hack_soc#41| (|hack_soc_s|) Bool) ; \ram_initialized
(declare-fun |hack_soc#42| (|hack_soc_s|) (_ BitVec 16)) ; \ram_data_out
(declare-fun |hack_soc#43| (|hack_soc_s|) Bool) ; \ram_busy
(declare-fun |hack_soc_h ram_encoder_0| (|hack_soc_s|) |$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_s|)
; yosys-smt2-output ram_sio_oe 1
; yosys-smt2-wire ram_sio_oe 1
(define-fun |hack_soc_n ram_sio_oe| ((state |hack_soc_s|)) Bool (|hack_soc#34| state))
; yosys-smt2-output ram_sio3_o 1
; yosys-smt2-wire ram_sio3_o 1
(define-fun |hack_soc_n ram_sio3_o| ((state |hack_soc_s|)) Bool (|hack_soc#35| state))
(declare-fun |hack_soc#44| (|hack_soc_s|) Bool) ; \ram_sio3_i
; yosys-smt2-input ram_sio3_i 1
; yosys-smt2-wire ram_sio3_i 1
(define-fun |hack_soc_n ram_sio3_i| ((state |hack_soc_s|)) Bool (|hack_soc#44| state))
; yosys-smt2-output ram_sio2_o 1
; yosys-smt2-wire ram_sio2_o 1
(define-fun |hack_soc_n ram_sio2_o| ((state |hack_soc_s|)) Bool (|hack_soc#36| state))
(declare-fun |hack_soc#45| (|hack_soc_s|) Bool) ; \ram_sio2_i
; yosys-smt2-input ram_sio2_i 1
; yosys-smt2-wire ram_sio2_i 1
(define-fun |hack_soc_n ram_sio2_i| ((state |hack_soc_s|)) Bool (|hack_soc#45| state))
; yosys-smt2-output ram_sio1_o 1
; yosys-smt2-wire ram_sio1_o 1
(define-fun |hack_soc_n ram_sio1_o| ((state |hack_soc_s|)) Bool (|hack_soc#37| state))
(declare-fun |hack_soc#46| (|hack_soc_s|) Bool) ; \ram_sio1_i
; yosys-smt2-input ram_sio1_i 1
; yosys-smt2-wire ram_sio1_i 1
(define-fun |hack_soc_n ram_sio1_i| ((state |hack_soc_s|)) Bool (|hack_soc#46| state))
; yosys-smt2-output ram_sio0_o 1
; yosys-smt2-wire ram_sio0_o 1
(define-fun |hack_soc_n ram_sio0_o| ((state |hack_soc_s|)) Bool (|hack_soc#38| state))
(declare-fun |hack_soc#47| (|hack_soc_s|) Bool) ; \ram_sio0_i
; yosys-smt2-input ram_sio0_i 1
; yosys-smt2-wire ram_sio0_i 1
(define-fun |hack_soc_n ram_sio0_i| ((state |hack_soc_s|)) Bool (|hack_soc#47| state))
; yosys-smt2-output ram_sck 1
; yosys-smt2-wire ram_sck 1
(define-fun |hack_soc_n ram_sck| ((state |hack_soc_s|)) Bool (|hack_soc#39| state))
(declare-fun |hack_soc#48| (|hack_soc_s|) Bool) ; \hack_external_reset
(declare-fun |hack_soc#49| (|hack_soc_s|) (_ BitVec 2)) ; \hack_wait_clocks
(define-fun |hack_soc#50| ((state |hack_soc_s|)) Bool (or  (= ((_ extract 0 0) (|hack_soc#49| state)) #b1) (= ((_ extract 1 1) (|hack_soc#49| state)) #b1))) ; $ne$hack_soc.v:211$13_Y
(define-fun |hack_soc#51| ((state |hack_soc_s|)) Bool (or  (|hack_soc#48| state) false  (|hack_soc#50| state) false)) ; $logic_or$hack_soc.v:211$14_Y
(define-fun |hack_soc#52| ((state |hack_soc_s|)) Bool (or  (|hack_soc#51| state) false  (|hack_soc#33| state) false)) ; $logic_or$hack_soc.v:211$15_Y
(define-fun |hack_soc#53| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#41| state) false))) ; $logic_not$hack_soc.v:211$16_Y
(define-fun |hack_soc#54| ((state |hack_soc_s|)) Bool (or  (|hack_soc#52| state) false  (|hack_soc#53| state) false)) ; $logic_or$hack_soc.v:211$17_Y
(define-fun |hack_soc#55| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#8| state) false))) ; $logic_not$hack_soc.v:211$18_Y
(define-fun |hack_soc#56| ((state |hack_soc_s|)) Bool (or  (|hack_soc#54| state) false  (|hack_soc#55| state) false)) ; \hack_reset
(define-fun |hack_soc#57| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#56| state) false))) ; $logic_not$hack_soc.v:212$20_Y
(define-fun |hack_soc#58| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#43| state) false))) ; $logic_not$hack_soc.v:212$21_Y
(define-fun |hack_soc#59| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#57| state) false) (or  (|hack_soc#58| state) false))) ; $logic_and$hack_soc.v:212$22_Y
(define-fun |hack_soc#60| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#59| state) false) (or  (|hack_soc#17| state) false))) ; $logic_and$hack_soc.v:212$23_Y
(define-fun |hack_soc#61| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#60| state) false) (or  (|hack_soc#16| state) false))) ; \ram_request
; yosys-smt2-wire ram_request 1
(define-fun |hack_soc_n ram_request| ((state |hack_soc_s|)) Bool (|hack_soc#61| state))
; yosys-smt2-wire ram_initialized 1
(define-fun |hack_soc_n ram_initialized| ((state |hack_soc_s|)) Bool (|hack_soc#41| state))
; yosys-smt2-wire ram_data_out 16
(define-fun |hack_soc_n ram_data_out| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#42| state))
; yosys-smt2-output ram_cs_n 1
; yosys-smt2-wire ram_cs_n 1
(define-fun |hack_soc_n ram_cs_n| ((state |hack_soc_s|)) Bool (|hack_soc#40| state))
; yosys-smt2-wire ram_busy 1
(define-fun |hack_soc_n ram_busy| ((state |hack_soc_s|)) Bool (|hack_soc#43| state))
(declare-fun |hack_soc#62| (|hack_soc_s|) (_ BitVec 1)) ; \initial_reset_passed
; yosys-smt2-register initial_reset_passed 1
; yosys-smt2-wire initial_reset_passed 1
(define-fun |hack_soc_n initial_reset_passed| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#62| state)) #b1))
; yosys-smt2-wire hack_writeM 1
(define-fun |hack_soc_n hack_writeM| ((state |hack_soc_s|)) Bool (|hack_soc#28| state))
; yosys-smt2-register hack_wait_clocks 2
; yosys-smt2-wire hack_wait_clocks 2
(define-fun |hack_soc_n hack_wait_clocks| ((state |hack_soc_s|)) (_ BitVec 2) (|hack_soc#49| state))
; yosys-smt2-wire hack_rom_request 1
(define-fun |hack_soc_n hack_rom_request| ((state |hack_soc_s|)) Bool (|hack_soc#19| state))
; yosys-smt2-wire hack_reset 1
(define-fun |hack_soc_n hack_reset| ((state |hack_soc_s|)) Bool (|hack_soc#56| state))
; yosys-smt2-wire hack_pc 15
(define-fun |hack_soc_n hack_pc| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#29| state))
; yosys-smt2-wire hack_outM 16
(define-fun |hack_soc_n hack_outM| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#30| state))
; yosys-smt2-wire hack_instruction 16
(define-fun |hack_soc_n hack_instruction| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#9| state))
(declare-fun |hack_soc#63| (|hack_soc_s|) (_ BitVec 16)) ; \gpio
(define-fun |hack_soc#64| ((state |hack_soc_s|)) Bool (= (|hack_soc#31| state) #b110000000000001)) ; $eq$hack_soc.v:246$38_Y
(define-fun |hack_soc#65| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#64| state) (|hack_soc#63| state) #b0000000000000000)) ; $auto$wreduce.cc:454:run$699 [15:0]
(define-fun |hack_soc#66| ((state |hack_soc_s|)) Bool (= (|hack_soc#31| state) #b110000000000000)) ; $eq$hack_soc.v:245$37_Y
(define-fun |hack_soc#67| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#66| state) #b0000000000000000 (|hack_soc#65| state))) ; $auto$wreduce.cc:454:run$698 [15:0]
(define-fun |hack_soc#68| ((state |hack_soc_s|)) Bool (bvult (|hack_soc#31| state) #b110000000000000)) ; $lt$hack_soc.v:244$36_Y
(define-fun |hack_soc#69| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#68| state) (|hack_soc#42| state) (|hack_soc#67| state))) ; $auto$wreduce.cc:454:run$697 [15:0]
(define-fun |hack_soc#70| ((state |hack_soc_s|)) Bool (bvult (|hack_soc#31| state) #b100000000000000)) ; $lt$hack_soc.v:243$35_Y
(define-fun |hack_soc#71| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#70| state) (|hack_soc#42| state) (|hack_soc#69| state))) ; \hack_inM
; yosys-smt2-wire hack_inM 16
(define-fun |hack_soc_n hack_inM| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#71| state))
; yosys-smt2-input hack_external_reset 1
; yosys-smt2-wire hack_external_reset 1
(define-fun |hack_soc_n hack_external_reset| ((state |hack_soc_s|)) Bool (|hack_soc#48| state))
; yosys-smt2-wire hack_clk_strobe 1
(define-fun |hack_soc_n hack_clk_strobe| ((state |hack_soc_s|)) Bool (|hack_soc#16| state))
; yosys-smt2-wire hack_clk 1
(define-fun |hack_soc_n hack_clk| ((state |hack_soc_s|)) Bool (|hack_soc#17| state))
; yosys-smt2-wire hack_addressM 15
(define-fun |hack_soc_n hack_addressM| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#31| state))
; yosys-smt2-output gpio 16
; yosys-smt2-register gpio 16
; yosys-smt2-wire gpio 16
(define-fun |hack_soc_n gpio| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#63| state))
(declare-fun |hack_soc#72| (|hack_soc_s|) (_ BitVec 1)) ; \f_past_valid
; yosys-smt2-register f_past_valid 1
; yosys-smt2-wire f_past_valid 1
(define-fun |hack_soc_n f_past_valid| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#72| state)) #b1))
; yosys-smt2-output debug_pc 15
; yosys-smt2-wire debug_pc 15
(define-fun |hack_soc_n debug_pc| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#29| state))
; yosys-smt2-output debug_instruction 16
; yosys-smt2-wire debug_instruction 16
(define-fun |hack_soc_n debug_instruction| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#9| state))
(declare-fun |hack_soc#73| (|hack_soc_s|) (_ BitVec 16)) ; \debug_gpio
; yosys-smt2-output debug_gpio 16
; yosys-smt2-register debug_gpio 16
; yosys-smt2-wire debug_gpio 16
(define-fun |hack_soc_n debug_gpio| ((state |hack_soc_s|)) (_ BitVec 16) (|hack_soc#73| state))
; yosys-smt2-output debug_addressM 15
; yosys-smt2-wire debug_addressM 15
(define-fun |hack_soc_n debug_addressM| ((state |hack_soc_s|)) (_ BitVec 15) (|hack_soc#31| state))
(declare-fun |hack_soc#74| (|hack_soc_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(define-fun |hack_soc_n clk| ((state |hack_soc_s|)) Bool (|hack_soc#74| state))
(declare-fun |hack_soc#75| (|hack_soc_s|) (_ BitVec 1)) ; $past$hack_soc.v:323$2$0
; yosys-smt2-register $past$hack_soc.v:323$2$0 1
(define-fun |hack_soc_n $past$hack_soc.v:323$2$0| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#75| state)) #b1))
(declare-fun |hack_soc#76| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:329$12_EN
; yosys-smt2-register $formal$hack_soc.v:329$12_EN 1
(define-fun |hack_soc_n $formal$hack_soc.v:329$12_EN| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#76| state)) #b1))
(declare-fun |hack_soc#77| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:329$12_CHECK
; yosys-smt2-register $formal$hack_soc.v:329$12_CHECK 1
(define-fun |hack_soc_n $formal$hack_soc.v:329$12_CHECK| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#77| state)) #b1))
(declare-fun |hack_soc#78| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:324$11_EN
; yosys-smt2-register $formal$hack_soc.v:324$11_EN 1
(define-fun |hack_soc_n $formal$hack_soc.v:324$11_EN| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#78| state)) #b1))
(declare-fun |hack_soc#79| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:324$11_CHECK
; yosys-smt2-register $formal$hack_soc.v:324$11_CHECK 1
(define-fun |hack_soc_n $formal$hack_soc.v:324$11_CHECK| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#79| state)) #b1))
(declare-fun |hack_soc#80| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:320$10_EN
; yosys-smt2-register $formal$hack_soc.v:320$10_EN 1
(define-fun |hack_soc_n $formal$hack_soc.v:320$10_EN| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#80| state)) #b1))
(declare-fun |hack_soc#81| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:320$10_CHECK
; yosys-smt2-register $formal$hack_soc.v:320$10_CHECK 1
(define-fun |hack_soc_n $formal$hack_soc.v:320$10_CHECK| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#81| state)) #b1))
(declare-fun |hack_soc#82| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:317$9_CHECK
; yosys-smt2-register $formal$hack_soc.v:317$9_CHECK 1
(define-fun |hack_soc_n $formal$hack_soc.v:317$9_CHECK| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#82| state)) #b1))
(declare-fun |hack_soc#83| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:315$8_EN
; yosys-smt2-register $formal$hack_soc.v:315$8_EN 1
(define-fun |hack_soc_n $formal$hack_soc.v:315$8_EN| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#83| state)) #b1))
(declare-fun |hack_soc#84| (|hack_soc_s|) (_ BitVec 1)) ; $formal$hack_soc.v:315$8_CHECK
; yosys-smt2-register $formal$hack_soc.v:315$8_CHECK 1
(define-fun |hack_soc_n $formal$hack_soc.v:315$8_CHECK| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#84| state)) #b1))
(declare-fun |hack_soc#85| (|hack_soc_s|) (_ BitVec 1)) ; $and$hack_soc.v:0$82_Y
; yosys-smt2-register $and$hack_soc.v:0$82_Y 1
(define-fun |hack_soc_n $and$hack_soc.v:0$82_Y| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#85| state)) #b1))
(declare-fun |hack_soc#86| (|hack_soc_s|) (_ BitVec 1)) ; $and$hack_soc.v:0$77_Y
; yosys-smt2-register $and$hack_soc.v:0$77_Y 1
(define-fun |hack_soc_n $and$hack_soc.v:0$77_Y| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#86| state)) #b1))
(declare-fun |hack_soc#87| (|hack_soc_s|) (_ BitVec 1)) ; $and$hack_soc.v:0$68_Y
; yosys-smt2-register $and$hack_soc.v:0$68_Y 1
(define-fun |hack_soc_n $and$hack_soc.v:0$68_Y| ((state |hack_soc_s|)) Bool (= ((_ extract 0 0) (|hack_soc#87| state)) #b1))
; yosys-smt2-cover 0 COVER_RAM_INIT
(define-fun |hack_soc_c 0| ((state |hack_soc_s|)) Bool (and (= ((_ extract 0 0) (|hack_soc#84| state)) #b1) (= ((_ extract 0 0) (|hack_soc#83| state)) #b1))) ; COVER_RAM_INIT
; yosys-smt2-cover 1 COVER_HACK_CLOCK_START
(define-fun |hack_soc_c 1| ((state |hack_soc_s|)) Bool (and (= ((_ extract 0 0) (|hack_soc#77| state)) #b1) (= ((_ extract 0 0) (|hack_soc#76| state)) #b1))) ; COVER_HACK_CLOCK_START
; yosys-smt2-assert 0 ASSERT_WAIT_CLOCK_BOUNDARIES
(define-fun |hack_soc_a 0| ((state |hack_soc_s|)) Bool (or (= ((_ extract 0 0) (|hack_soc#82| state)) #b1) (not (= ((_ extract 0 0) (|hack_soc#83| state)) #b1)))) ; ASSERT_WAIT_CLOCK_BOUNDARIES
; yosys-smt2-assert 1 ASSERT_RAM_REQUESTS_ON_INIT
(define-fun |hack_soc_a 1| ((state |hack_soc_s|)) Bool (or (= ((_ extract 0 0) (|hack_soc#81| state)) #b1) (not (= ((_ extract 0 0) (|hack_soc#80| state)) #b1)))) ; ASSERT_RAM_REQUESTS_ON_INIT
; yosys-smt2-assert 2 ASSERT_RAM_CLK_SYNCHRO
(define-fun |hack_soc_a 2| ((state |hack_soc_s|)) Bool (or (= ((_ extract 0 0) (|hack_soc#79| state)) #b1) (not (= ((_ extract 0 0) (|hack_soc#78| state)) #b1)))) ; ASSERT_RAM_CLK_SYNCHRO
(define-fun |hack_soc#88| ((state |hack_soc_s|)) Bool (|hack_soc_is| state)) ; $0$formal$hack_soc.v:304$6_EN[0:0]$95
; yosys-smt2-assume 0 hack_soc.v:304.12-304.26
(define-fun |hack_soc_u 0| ((state |hack_soc_s|)) Bool (or (|hack_soc#33| state) (not (|hack_soc#88| state)))) ; $assume$hack_soc.v:304$90
; yosys-smt2-anyseq hack_soc#89 1 $auto$setundef.cc:501:execute$704
(declare-fun |hack_soc#89| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$705
(define-fun |hack_soc#90| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (ite (|hack_soc#41| state) #b1 #b0) (|hack_soc#89| state))) ; $0$formal$hack_soc.v:315$8_CHECK[0:0]$58
(define-fun |hack_soc#91| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) #b1 #b0)) ; $0$formal$hack_soc.v:315$8_EN[0:0]$59
; yosys-smt2-anyseq hack_soc#92 1 $auto$setundef.cc:501:execute$706
(declare-fun |hack_soc#92| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$707
(define-fun |hack_soc#93| ((state |hack_soc_s|)) Bool (bvule (|hack_soc#49| state) #b10)) ; $le$hack_soc.v:317$72_Y
(define-fun |hack_soc#94| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (ite (|hack_soc#93| state) #b1 #b0) (|hack_soc#92| state))) ; $0$formal$hack_soc.v:317$9_CHECK[0:0]$60
; yosys-smt2-anyseq hack_soc#95 1 $auto$setundef.cc:501:execute$710
(declare-fun |hack_soc#95| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$711
(define-fun |hack_soc#96| ((state |hack_soc_s|)) (_ BitVec 1) (bvnot (ite (|hack_soc#61| state) #b1 #b0))) ; $eq$hack_soc.v:320$74_Y
; yosys-smt2-anyseq hack_soc#97 1 $auto$setundef.cc:501:execute$708
(declare-fun |hack_soc#97| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$709
(define-fun |hack_soc#98| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#41| state) (|hack_soc#97| state) (|hack_soc#96| state))) ; $procmux$599_Y
(define-fun |hack_soc#99| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (|hack_soc#98| state) (|hack_soc#95| state))) ; $0$formal$hack_soc.v:320$10_CHECK[0:0]$62
(define-fun |hack_soc#100| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#41| state) #b0 #b1)) ; $procmux$595_Y
(define-fun |hack_soc#101| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (|hack_soc#100| state) #b0)) ; $auto$rtlil.cc:2218:Mux$905
; yosys-smt2-anyseq hack_soc#102 1 $auto$setundef.cc:501:execute$714
(declare-fun |hack_soc#102| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$715
; yosys-smt2-anyseq hack_soc#103 1 $auto$setundef.cc:501:execute$712
(declare-fun |hack_soc#103| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$713
(define-fun |hack_soc#104| ((state |hack_soc_s|)) Bool (not (or  (= ((_ extract 0 0) (|hack_soc#85| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_not$hack_soc.v:0$83_Y
(define-fun |hack_soc#105| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#104| state) false) (or  (|hack_soc#39| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_and$hack_soc.v:324$85_Y
(define-fun |hack_soc#106| ((state |hack_soc_s|)) Bool (and (or  (= ((_ extract 0 0) (|hack_soc#75| state)) #b1) false) (or  (|hack_soc#57| state) false))) ; $logic_and$hack_soc.v:323$76_Y
(define-fun |hack_soc#107| ((state |hack_soc_s|)) Bool (not (or  (= ((_ extract 0 0) (|hack_soc#86| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_not$hack_soc.v:0$78_Y
(define-fun |hack_soc#108| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#107| state) false) (or  (|hack_soc#17| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_and$hack_soc.v:323$80_Y
(define-fun |hack_soc#109| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#106| state) false) (or  (|hack_soc#108| state) false))) ; $logic_and$hack_soc.v:323$81_Y
(define-fun |hack_soc#110| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#109| state) (ite (|hack_soc#105| state) #b1 #b0) (|hack_soc#103| state))) ; $procmux$607_Y
(define-fun |hack_soc#111| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (|hack_soc#110| state) (|hack_soc#102| state))) ; $0$formal$hack_soc.v:324$11_CHECK[0:0]$64
(define-fun |hack_soc#112| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#109| state) #b1 #b0)) ; $procmux$603_Y
(define-fun |hack_soc#113| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) (|hack_soc#112| state) #b0)) ; $auto$rtlil.cc:2218:Mux$907
; yosys-smt2-anyseq hack_soc#114 1 $auto$setundef.cc:501:execute$716
(declare-fun |hack_soc#114| (|hack_soc_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2811:Anyseq$717
(define-fun |hack_soc#115| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#72| state)) #b1) (ite (|hack_soc#108| state) #b1 #b0) (|hack_soc#114| state))) ; $0$formal$hack_soc.v:329$12_CHECK[0:0]$66
(define-fun |hack_soc#116| ((state |hack_soc_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|hack_soc#72| state)) #b1) #b1 #b0)) ; $0$formal$hack_soc.v:329$12_EN[0:0]$67
(define-fun |hack_soc#117| ((state |hack_soc_s|)) Bool (= (|hack_soc#31| state) #b000000000000001)) ; $eq$hack_soc.v:266$50_Y
(define-fun |hack_soc#118| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#117| state) false) (or  (|hack_soc#28| state) false))) ; $logic_and$hack_soc.v:266$51_Y
(define-fun |hack_soc#119| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#118| state) (|hack_soc#30| state) (|hack_soc#73| state))) ; $auto$rtlil.cc:2218:Mux$893
(define-fun |hack_soc#120| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#56| state) #b0000000000000000 (|hack_soc#119| state))) ; $auto$rtlil.cc:2218:Mux$895
(define-fun |hack_soc#121| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#64| state) false) (or  (|hack_soc#28| state) false))) ; $logic_and$hack_soc.v:255$48_Y
(define-fun |hack_soc#122| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#121| state) (|hack_soc#30| state) (|hack_soc#63| state))) ; $auto$rtlil.cc:2218:Mux$897
(define-fun |hack_soc#123| ((state |hack_soc_s|)) (_ BitVec 16) (ite (|hack_soc#56| state) #b0000000000000000 (|hack_soc#122| state))) ; $auto$rtlil.cc:2218:Mux$899
(define-fun |hack_soc#124| ((state |hack_soc_s|)) Bool (not (or  (|hack_soc#33| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_not$hack_soc.v:0$70_Y
(define-fun |hack_soc#125| ((state |hack_soc_s|)) Bool (and (or  (= ((_ extract 0 0) (|hack_soc#87| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false) (or  (|hack_soc#124| state) false))) ; $logic_and$hack_soc.v:309$71_Y
(define-fun |hack_soc#126| ((state |hack_soc_s|)) (_ BitVec 1) (ite (|hack_soc#125| state) #b1 (|hack_soc#62| state))) ; $auto$rtlil.cc:2218:Mux$891
(define-fun |hack_soc#127| ((state |hack_soc_s|)) (_ BitVec 2) (bvsub (|hack_soc#49| state) #b01)) ; $sub$hack_soc.v:228$34_Y
(define-fun |hack_soc#128| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#50| state) false) (or  (|hack_soc#16| state) false))) ; $logic_and$hack_soc.v:227$32_Y
(define-fun |hack_soc#129| ((state |hack_soc_s|)) Bool (and (or  (|hack_soc#128| state) false) (or  (|hack_soc#17| state) false))) ; $logic_and$hack_soc.v:227$33_Y
(define-fun |hack_soc#130| ((state |hack_soc_s|)) (_ BitVec 2) (ite (|hack_soc#129| state) (|hack_soc#127| state) (|hack_soc#49| state))) ; $auto$rtlil.cc:2218:Mux$901
(define-fun |hack_soc#131| ((state |hack_soc_s|)) Bool (or  (|hack_soc#33| state) (|hack_soc#48| state))) ; $auto$opt_dff.cc:276:combine_resets$879
(define-fun |hack_soc#132| ((state |hack_soc_s|)) (_ BitVec 2) (ite (|hack_soc#131| state) #b10 (|hack_soc#130| state))) ; $auto$rtlil.cc:2218:Mux$903
(define-fun |hack_soc_a| ((state |hack_soc_s|)) Bool (and
  (|hack_soc_a 0| state)
  (|hack_soc_a 1| state)
  (|hack_soc_a 2| state)
  (|hack_cpu_a| (|hack_soc_h cpu| state))
  (|hack_clock_a| (|hack_soc_h hack_clock_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_a| (|hack_soc_h ram_encoder_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_a| (|hack_soc_h rom_encoder_0| state))
  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_a| (|hack_soc_h rom_loader| state))
))
(define-fun |hack_soc_u| ((state |hack_soc_s|)) Bool (and
  (|hack_soc_u 0| state)
  (|hack_cpu_u| (|hack_soc_h cpu| state))
  (|hack_clock_u| (|hack_soc_h hack_clock_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_u| (|hack_soc_h ram_encoder_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_u| (|hack_soc_h rom_encoder_0| state))
  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_u| (|hack_soc_h rom_loader| state))
))
(define-fun |hack_soc_i| ((state |hack_soc_s|)) Bool (and
  (= (= ((_ extract 0 0) (|hack_soc#62| state)) #b1) false) ; initial_reset_passed
  (= (= ((_ extract 0 0) (|hack_soc#72| state)) #b1) false) ; f_past_valid
  (= (= ((_ extract 0 0) (|hack_soc#76| state)) #b1) false) ; $formal$hack_soc.v:329$12_EN
  (= (= ((_ extract 0 0) (|hack_soc#78| state)) #b1) false) ; $formal$hack_soc.v:324$11_EN
  (= (= ((_ extract 0 0) (|hack_soc#80| state)) #b1) false) ; $formal$hack_soc.v:320$10_EN
  (= (= ((_ extract 0 0) (|hack_soc#83| state)) #b1) false) ; $formal$hack_soc.v:315$8_EN
  (|hack_cpu_i| (|hack_soc_h cpu| state))
  (|hack_clock_i| (|hack_soc_h hack_clock_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_i| (|hack_soc_h ram_encoder_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_i| (|hack_soc_h rom_encoder_0| state))
  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_i| (|hack_soc_h rom_loader| state))
))
(define-fun |hack_soc_h| ((state |hack_soc_s|)) Bool (and
  (= (|hack_soc_is| state) (|hack_cpu_is| (|hack_soc_h cpu| state)))
  (= (|hack_soc#28| state) (|hack_cpu_n writeM| (|hack_soc_h cpu| state))) ; hack_cpu.writeM
  (= (|hack_soc#56| state) (|hack_cpu_n reset| (|hack_soc_h cpu| state))) ; hack_cpu.reset
  (= (|hack_soc#29| state) (|hack_cpu_n pc| (|hack_soc_h cpu| state))) ; hack_cpu.pc
  (= (|hack_soc#30| state) (|hack_cpu_n outM| (|hack_soc_h cpu| state))) ; hack_cpu.outM
  (= (|hack_soc#9| state) (|hack_cpu_n instruction| (|hack_soc_h cpu| state))) ; hack_cpu.instruction
  (= (|hack_soc#71| state) (|hack_cpu_n inM| (|hack_soc_h cpu| state))) ; hack_cpu.inM
  (= (|hack_soc#17| state) (|hack_cpu_n clk| (|hack_soc_h cpu| state))) ; hack_cpu.clk
  (= (|hack_soc#31| state) (|hack_cpu_n addressM| (|hack_soc_h cpu| state))) ; hack_cpu.addressM
  (= (|hack_soc_is| state) (|hack_clock_is| (|hack_soc_h hack_clock_0| state)))
  (= (|hack_soc#16| state) (|hack_clock_n strobe| (|hack_soc_h hack_clock_0| state))) ; hack_clock.strobe
  (= (|hack_soc#33| state) (|hack_clock_n reset| (|hack_soc_h hack_clock_0| state))) ; hack_clock.reset
  (= (|hack_soc#17| state) (|hack_clock_n hack_clk| (|hack_soc_h hack_clock_0| state))) ; hack_clock.hack_clk
  (= (|hack_soc#74| state) (|hack_clock_n clk| (|hack_soc_h hack_clock_0| state))) ; hack_clock.clk
  (= (|hack_soc_is| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_is| (|hack_soc_h ram_encoder_0| state)))
  (= (|hack_soc#28| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n write_enable| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.write_enable
  (= (|hack_soc#34| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio_oe| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio_oe
  (= (|hack_soc#35| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_o| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio3_o
  (= (|hack_soc#44| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_i| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio3_i
  (= (|hack_soc#36| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_o| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio2_o
  (= (|hack_soc#45| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_i| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio2_i
  (= (|hack_soc#37| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_o| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio1_o
  (= (|hack_soc#46| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_i| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio1_i
  (= (|hack_soc#38| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_o| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio0_o
  (= (|hack_soc#47| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_i| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio0_i
  (= (|hack_soc#39| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sck| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sck
  (= (|hack_soc#40| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_cs_n| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_cs_n
  (= (|hack_soc#33| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n reset| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.reset
  (= (|hack_soc#61| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.request
  (= (|hack_soc#41| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n initialized| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.initialized
  (= (|hack_soc#30| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_out| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.data_out
  (= (|hack_soc#42| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_in| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.data_in
  (= (|hack_soc#74| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n clk| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.clk
  (= (|hack_soc#43| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n busy| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.busy
  (= (|hack_soc#31| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n address| (|hack_soc_h ram_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.address
  (= (|hack_soc_is| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_is| (|hack_soc_h rom_encoder_0| state)))
  (= (|hack_soc#0| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n write_enable| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.write_enable
  (= (|hack_soc#1| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio_oe| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio_oe
  (= (|hack_soc#2| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_o| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio3_o
  (= (|hack_soc#11| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio3_i| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio3_i
  (= (|hack_soc#3| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_o| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio2_o
  (= (|hack_soc#12| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio2_i| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio2_i
  (= (|hack_soc#4| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_o| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio1_o
  (= (|hack_soc#13| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio1_i| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio1_i
  (= (|hack_soc#5| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_o| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio0_o
  (= (|hack_soc#14| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sio0_i| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sio0_i
  (= (|hack_soc#6| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_sck| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_sck
  (= (|hack_soc#7| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n sram_cs_n| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.sram_cs_n
  (= (|hack_soc#33| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n reset| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.reset
  (= (= ((_ extract 0 0) (|hack_soc#25| state)) #b1) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n request| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.request
  (= (|hack_soc#8| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n initialized| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.initialized
  (= (|hack_soc#21| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_out| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.data_out
  (= (|hack_soc#9| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n data_in| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.data_in
  (= (|hack_soc#74| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n clk| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.clk
  (= (|hack_soc#10| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n busy| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.busy
  (= (|hack_soc#32| state) (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_n address| (|hack_soc_h rom_encoder_0| state))) ; $paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15.address
  (= (|hack_soc_is| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_is| (|hack_soc_h rom_loader| state)))
  (= (|hack_soc#20| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_request| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.rom_request
  (= (|hack_soc#8| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_initialized| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.rom_initialized
  (= (|hack_soc#10| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n rom_busy| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.rom_busy
  (= (|hack_soc#26| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n reset| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.reset
  (= (|hack_soc#21| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n output_data| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.output_data
  (= (|hack_soc#22| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n output_address| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.output_address
  (= (|hack_soc#23| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n load_recevied| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.load_recevied
  (= (|hack_soc#0| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n load| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.load
  (= (|hack_soc#27| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n input_data| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.input_data
  (= (|hack_soc#74| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n clk| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.clk
  (= (|hack_soc#24| state) (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_n ack| (|hack_soc_h rom_loader| state))) ; $paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15.ack
  (|hack_cpu_h| (|hack_soc_h cpu| state))
  (|hack_clock_h| (|hack_soc_h hack_clock_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_h| (|hack_soc_h ram_encoder_0| state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_h| (|hack_soc_h rom_encoder_0| state))
  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_h| (|hack_soc_h rom_loader| state))
))
(define-fun |hack_soc_t| ((state |hack_soc_s|) (next_state |hack_soc_s|)) Bool (and
  (= (ite (|hack_soc#33| state) #b1 #b0) (|hack_soc#87| next_state)) ; $procdff$660 $and$hack_soc.v:0$68_Y
  (= (ite (|hack_soc#17| state) #b1 #b0) (|hack_soc#86| next_state)) ; $procdff$662 $and$hack_soc.v:0$77_Y
  (= (ite (|hack_soc#39| state) #b1 #b0) (|hack_soc#85| next_state)) ; $procdff$663 $and$hack_soc.v:0$82_Y
  (= (|hack_soc#90| state) (|hack_soc#84| next_state)) ; $procdff$665 $formal$hack_soc.v:315$8_CHECK
  (= (|hack_soc#91| state) (|hack_soc#83| next_state)) ; $procdff$666 $formal$hack_soc.v:315$8_EN
  (= (|hack_soc#94| state) (|hack_soc#82| next_state)) ; $procdff$667 $formal$hack_soc.v:317$9_CHECK
  (= (|hack_soc#99| state) (|hack_soc#81| next_state)) ; $procdff$669 $formal$hack_soc.v:320$10_CHECK
  (= (|hack_soc#101| state) (|hack_soc#80| next_state)) ; $auto$opt_dff.cc:702:run$888 $formal$hack_soc.v:320$10_EN
  (= (|hack_soc#111| state) (|hack_soc#79| next_state)) ; $procdff$671 $formal$hack_soc.v:324$11_CHECK
  (= (|hack_soc#113| state) (|hack_soc#78| next_state)) ; $auto$opt_dff.cc:702:run$887 $formal$hack_soc.v:324$11_EN
  (= (|hack_soc#115| state) (|hack_soc#77| next_state)) ; $procdff$673 $formal$hack_soc.v:329$12_CHECK
  (= (|hack_soc#116| state) (|hack_soc#76| next_state)) ; $procdff$674 $formal$hack_soc.v:329$12_EN
  (= (ite (|hack_soc#61| state) #b1 #b0) (|hack_soc#75| next_state)) ; $procdff$661 $past$hack_soc.v:323$2$0
  (= (|hack_soc#120| state) (|hack_soc#73| next_state)) ; $auto$opt_dff.cc:764:run$886 \debug_gpio
  (= #b1 (|hack_soc#72| next_state)) ; $procdff$658 \f_past_valid
  (= (|hack_soc#123| state) (|hack_soc#63| next_state)) ; $auto$opt_dff.cc:764:run$884 \gpio
  (= (|hack_soc#126| state) (|hack_soc#62| next_state)) ; $auto$opt_dff.cc:764:run$889 \initial_reset_passed
  (= (|hack_soc#132| state) (|hack_soc#49| next_state)) ; $auto$opt_dff.cc:764:run$882 \hack_wait_clocks
  (|hack_cpu_t| (|hack_soc_h cpu| state) (|hack_soc_h cpu| next_state))
  (|hack_clock_t| (|hack_soc_h hack_clock_0| state) (|hack_soc_h hack_clock_0| next_state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_t| (|hack_soc_h ram_encoder_0| state) (|hack_soc_h ram_encoder_0| next_state))
  (|$paramod/spi_sram_encoder/WORD_WIDTH=16/ADDRESS_WIDTH=15_t| (|hack_soc_h rom_encoder_0| state) (|hack_soc_h rom_encoder_0| next_state))
  (|$paramod/rom_stream_loader/DATA_WIDTH=16/ADDRESS_WIDTH=15_t| (|hack_soc_h rom_loader| state) (|hack_soc_h rom_loader| next_state))
)) ; end of module hack_soc
; yosys-smt2-topmod hack_soc
; end of yosys output
